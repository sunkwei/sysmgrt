/* soapH.h
   Generated by gSOAP 2.8.17r from zonekey_sysmgrt.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__Catalog
#define SOAP_TYPE_zkreg__Catalog (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__Catalog(struct soap*, enum zkreg__Catalog *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__Catalog(struct soap*, const char*, int, const enum zkreg__Catalog *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_zkreg__Catalog2s(struct soap*, enum zkreg__Catalog);
SOAP_FMAC3 enum zkreg__Catalog * SOAP_FMAC4 soap_in_zkreg__Catalog(struct soap*, const char*, enum zkreg__Catalog *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2zkreg__Catalog(struct soap*, const char*, enum zkreg__Catalog *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__Catalog(struct soap*, const enum zkreg__Catalog *, const char*, const char*);

#ifndef soap_write_zkreg__Catalog
#define soap_write_zkreg__Catalog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__Catalog(soap, data),0) || soap_put_zkreg__Catalog(soap, data, "zkreg:Catalog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum zkreg__Catalog * SOAP_FMAC4 soap_get_zkreg__Catalog(struct soap*, enum zkreg__Catalog *, const char*, const char*);

#ifndef soap_read_zkreg__Catalog
#define soap_read_zkreg__Catalog(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__Catalog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__boolean(struct soap*, enum xsd__boolean *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const enum xsd__boolean *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__boolean2s(struct soap*, enum xsd__boolean);
SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, enum xsd__boolean *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__boolean(struct soap*, const char*, enum xsd__boolean *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__boolean(struct soap*, const enum xsd__boolean *, const char*, const char*);

#ifndef soap_write_xsd__boolean
#define soap_write_xsd__boolean(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__boolean(soap, data),0) || soap_put_xsd__boolean(soap, data, "xsd:boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, enum xsd__boolean *, const char*, const char*);

#ifndef soap_read_xsd__boolean
#define soap_read_xsd__boolean(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__boolean(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (99)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (98)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (96)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_zkcfg__delKey
#define SOAP_TYPE_zkcfg__delKey (94)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkcfg__delKey(struct soap*, struct zkcfg__delKey *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkcfg__delKey(struct soap*, const struct zkcfg__delKey *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkcfg__delKey(struct soap*, const char*, int, const struct zkcfg__delKey *, const char*);
SOAP_FMAC3 struct zkcfg__delKey * SOAP_FMAC4 soap_in_zkcfg__delKey(struct soap*, const char*, struct zkcfg__delKey *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkcfg__delKey(struct soap*, const struct zkcfg__delKey *, const char*, const char*);

#ifndef soap_write_zkcfg__delKey
#define soap_write_zkcfg__delKey(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkcfg__delKey(soap, data),0) || soap_put_zkcfg__delKey(soap, data, "zkcfg:delKey", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkcfg__delKey * SOAP_FMAC4 soap_get_zkcfg__delKey(struct soap*, struct zkcfg__delKey *, const char*, const char*);

#ifndef soap_read_zkcfg__delKey
#define soap_read_zkcfg__delKey(soap, data) ( soap_begin_recv(soap) || !soap_get_zkcfg__delKey(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkcfg__setValue
#define SOAP_TYPE_zkcfg__setValue (92)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkcfg__setValue(struct soap*, struct zkcfg__setValue *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkcfg__setValue(struct soap*, const struct zkcfg__setValue *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkcfg__setValue(struct soap*, const char*, int, const struct zkcfg__setValue *, const char*);
SOAP_FMAC3 struct zkcfg__setValue * SOAP_FMAC4 soap_in_zkcfg__setValue(struct soap*, const char*, struct zkcfg__setValue *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkcfg__setValue(struct soap*, const struct zkcfg__setValue *, const char*, const char*);

#ifndef soap_write_zkcfg__setValue
#define soap_write_zkcfg__setValue(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkcfg__setValue(soap, data),0) || soap_put_zkcfg__setValue(soap, data, "zkcfg:setValue", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkcfg__setValue * SOAP_FMAC4 soap_get_zkcfg__setValue(struct soap*, struct zkcfg__setValue *, const char*, const char*);

#ifndef soap_read_zkcfg__setValue
#define soap_read_zkcfg__setValue(soap, data) ( soap_begin_recv(soap) || !soap_get_zkcfg__setValue(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkcfg__getValue
#define SOAP_TYPE_zkcfg__getValue (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkcfg__getValue(struct soap*, struct zkcfg__getValue *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkcfg__getValue(struct soap*, const struct zkcfg__getValue *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkcfg__getValue(struct soap*, const char*, int, const struct zkcfg__getValue *, const char*);
SOAP_FMAC3 struct zkcfg__getValue * SOAP_FMAC4 soap_in_zkcfg__getValue(struct soap*, const char*, struct zkcfg__getValue *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkcfg__getValue(struct soap*, const struct zkcfg__getValue *, const char*, const char*);

#ifndef soap_write_zkcfg__getValue
#define soap_write_zkcfg__getValue(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkcfg__getValue(soap, data),0) || soap_put_zkcfg__getValue(soap, data, "zkcfg:getValue", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkcfg__getValue * SOAP_FMAC4 soap_get_zkcfg__getValue(struct soap*, struct zkcfg__getValue *, const char*, const char*);

#ifndef soap_read_zkcfg__getValue
#define soap_read_zkcfg__getValue(soap, data) ( soap_begin_recv(soap) || !soap_get_zkcfg__getValue(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkcfg__getValueResponse
#define SOAP_TYPE_zkcfg__getValueResponse (89)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkcfg__getValueResponse(struct soap*, struct zkcfg__getValueResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkcfg__getValueResponse(struct soap*, const struct zkcfg__getValueResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkcfg__getValueResponse(struct soap*, const char*, int, const struct zkcfg__getValueResponse *, const char*);
SOAP_FMAC3 struct zkcfg__getValueResponse * SOAP_FMAC4 soap_in_zkcfg__getValueResponse(struct soap*, const char*, struct zkcfg__getValueResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkcfg__getValueResponse(struct soap*, const struct zkcfg__getValueResponse *, const char*, const char*);

#ifndef soap_write_zkcfg__getValueResponse
#define soap_write_zkcfg__getValueResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkcfg__getValueResponse(soap, data),0) || soap_put_zkcfg__getValueResponse(soap, data, "zkcfg:getValueResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkcfg__getValueResponse * SOAP_FMAC4 soap_get_zkcfg__getValueResponse(struct soap*, struct zkcfg__getValueResponse *, const char*, const char*);

#ifndef soap_read_zkcfg__getValueResponse
#define soap_read_zkcfg__getValueResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkcfg__getValueResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkcfg__getAllKeys
#define SOAP_TYPE_zkcfg__getAllKeys (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkcfg__getAllKeys(struct soap*, struct zkcfg__getAllKeys *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkcfg__getAllKeys(struct soap*, const struct zkcfg__getAllKeys *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkcfg__getAllKeys(struct soap*, const char*, int, const struct zkcfg__getAllKeys *, const char*);
SOAP_FMAC3 struct zkcfg__getAllKeys * SOAP_FMAC4 soap_in_zkcfg__getAllKeys(struct soap*, const char*, struct zkcfg__getAllKeys *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkcfg__getAllKeys(struct soap*, const struct zkcfg__getAllKeys *, const char*, const char*);

#ifndef soap_write_zkcfg__getAllKeys
#define soap_write_zkcfg__getAllKeys(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkcfg__getAllKeys(soap, data),0) || soap_put_zkcfg__getAllKeys(soap, data, "zkcfg:getAllKeys", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkcfg__getAllKeys * SOAP_FMAC4 soap_get_zkcfg__getAllKeys(struct soap*, struct zkcfg__getAllKeys *, const char*, const char*);

#ifndef soap_read_zkcfg__getAllKeys
#define soap_read_zkcfg__getAllKeys(soap, data) ( soap_begin_recv(soap) || !soap_get_zkcfg__getAllKeys(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkcfg__getAllKeysResponse
#define SOAP_TYPE_zkcfg__getAllKeysResponse (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkcfg__getAllKeysResponse(struct soap*, struct zkcfg__getAllKeysResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkcfg__getAllKeysResponse(struct soap*, const struct zkcfg__getAllKeysResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkcfg__getAllKeysResponse(struct soap*, const char*, int, const struct zkcfg__getAllKeysResponse *, const char*);
SOAP_FMAC3 struct zkcfg__getAllKeysResponse * SOAP_FMAC4 soap_in_zkcfg__getAllKeysResponse(struct soap*, const char*, struct zkcfg__getAllKeysResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkcfg__getAllKeysResponse(struct soap*, const struct zkcfg__getAllKeysResponse *, const char*, const char*);

#ifndef soap_write_zkcfg__getAllKeysResponse
#define soap_write_zkcfg__getAllKeysResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkcfg__getAllKeysResponse(soap, data),0) || soap_put_zkcfg__getAllKeysResponse(soap, data, "zkcfg:getAllKeysResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkcfg__getAllKeysResponse * SOAP_FMAC4 soap_get_zkcfg__getAllKeysResponse(struct soap*, struct zkcfg__getAllKeysResponse *, const char*, const char*);

#ifndef soap_read_zkcfg__getAllKeysResponse
#define soap_read_zkcfg__getAllKeysResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkcfg__getAllKeysResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkq__getServicesByType
#define SOAP_TYPE_zkq__getServicesByType (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkq__getServicesByType(struct soap*, struct zkq__getServicesByType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkq__getServicesByType(struct soap*, const struct zkq__getServicesByType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkq__getServicesByType(struct soap*, const char*, int, const struct zkq__getServicesByType *, const char*);
SOAP_FMAC3 struct zkq__getServicesByType * SOAP_FMAC4 soap_in_zkq__getServicesByType(struct soap*, const char*, struct zkq__getServicesByType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkq__getServicesByType(struct soap*, const struct zkq__getServicesByType *, const char*, const char*);

#ifndef soap_write_zkq__getServicesByType
#define soap_write_zkq__getServicesByType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkq__getServicesByType(soap, data),0) || soap_put_zkq__getServicesByType(soap, data, "zkq:getServicesByType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkq__getServicesByType * SOAP_FMAC4 soap_get_zkq__getServicesByType(struct soap*, struct zkq__getServicesByType *, const char*, const char*);

#ifndef soap_read_zkq__getServicesByType
#define soap_read_zkq__getServicesByType(soap, data) ( soap_begin_recv(soap) || !soap_get_zkq__getServicesByType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkq__getServicesByTypeResponse
#define SOAP_TYPE_zkq__getServicesByTypeResponse (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkq__getServicesByTypeResponse(struct soap*, struct zkq__getServicesByTypeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkq__getServicesByTypeResponse(struct soap*, const struct zkq__getServicesByTypeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkq__getServicesByTypeResponse(struct soap*, const char*, int, const struct zkq__getServicesByTypeResponse *, const char*);
SOAP_FMAC3 struct zkq__getServicesByTypeResponse * SOAP_FMAC4 soap_in_zkq__getServicesByTypeResponse(struct soap*, const char*, struct zkq__getServicesByTypeResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkq__getServicesByTypeResponse(struct soap*, const struct zkq__getServicesByTypeResponse *, const char*, const char*);

#ifndef soap_write_zkq__getServicesByTypeResponse
#define soap_write_zkq__getServicesByTypeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkq__getServicesByTypeResponse(soap, data),0) || soap_put_zkq__getServicesByTypeResponse(soap, data, "zkq:getServicesByTypeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkq__getServicesByTypeResponse * SOAP_FMAC4 soap_get_zkq__getServicesByTypeResponse(struct soap*, struct zkq__getServicesByTypeResponse *, const char*, const char*);

#ifndef soap_read_zkq__getServicesByTypeResponse
#define soap_read_zkq__getServicesByTypeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkq__getServicesByTypeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkq__getAllLogics
#define SOAP_TYPE_zkq__getAllLogics (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkq__getAllLogics(struct soap*, struct zkq__getAllLogics *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkq__getAllLogics(struct soap*, const struct zkq__getAllLogics *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkq__getAllLogics(struct soap*, const char*, int, const struct zkq__getAllLogics *, const char*);
SOAP_FMAC3 struct zkq__getAllLogics * SOAP_FMAC4 soap_in_zkq__getAllLogics(struct soap*, const char*, struct zkq__getAllLogics *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkq__getAllLogics(struct soap*, const struct zkq__getAllLogics *, const char*, const char*);

#ifndef soap_write_zkq__getAllLogics
#define soap_write_zkq__getAllLogics(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkq__getAllLogics(soap, data),0) || soap_put_zkq__getAllLogics(soap, data, "zkq:getAllLogics", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkq__getAllLogics * SOAP_FMAC4 soap_get_zkq__getAllLogics(struct soap*, struct zkq__getAllLogics *, const char*, const char*);

#ifndef soap_read_zkq__getAllLogics
#define soap_read_zkq__getAllLogics(soap, data) ( soap_begin_recv(soap) || !soap_get_zkq__getAllLogics(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkq__getAllLogicsResponse
#define SOAP_TYPE_zkq__getAllLogicsResponse (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkq__getAllLogicsResponse(struct soap*, struct zkq__getAllLogicsResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkq__getAllLogicsResponse(struct soap*, const struct zkq__getAllLogicsResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkq__getAllLogicsResponse(struct soap*, const char*, int, const struct zkq__getAllLogicsResponse *, const char*);
SOAP_FMAC3 struct zkq__getAllLogicsResponse * SOAP_FMAC4 soap_in_zkq__getAllLogicsResponse(struct soap*, const char*, struct zkq__getAllLogicsResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkq__getAllLogicsResponse(struct soap*, const struct zkq__getAllLogicsResponse *, const char*, const char*);

#ifndef soap_write_zkq__getAllLogicsResponse
#define soap_write_zkq__getAllLogicsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkq__getAllLogicsResponse(soap, data),0) || soap_put_zkq__getAllLogicsResponse(soap, data, "zkq:getAllLogicsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkq__getAllLogicsResponse * SOAP_FMAC4 soap_get_zkq__getAllLogicsResponse(struct soap*, struct zkq__getAllLogicsResponse *, const char*, const char*);

#ifndef soap_read_zkq__getAllLogicsResponse
#define soap_read_zkq__getAllLogicsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkq__getAllLogicsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkq__getAllDevices
#define SOAP_TYPE_zkq__getAllDevices (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkq__getAllDevices(struct soap*, struct zkq__getAllDevices *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkq__getAllDevices(struct soap*, const struct zkq__getAllDevices *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkq__getAllDevices(struct soap*, const char*, int, const struct zkq__getAllDevices *, const char*);
SOAP_FMAC3 struct zkq__getAllDevices * SOAP_FMAC4 soap_in_zkq__getAllDevices(struct soap*, const char*, struct zkq__getAllDevices *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkq__getAllDevices(struct soap*, const struct zkq__getAllDevices *, const char*, const char*);

#ifndef soap_write_zkq__getAllDevices
#define soap_write_zkq__getAllDevices(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkq__getAllDevices(soap, data),0) || soap_put_zkq__getAllDevices(soap, data, "zkq:getAllDevices", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkq__getAllDevices * SOAP_FMAC4 soap_get_zkq__getAllDevices(struct soap*, struct zkq__getAllDevices *, const char*, const char*);

#ifndef soap_read_zkq__getAllDevices
#define soap_read_zkq__getAllDevices(soap, data) ( soap_begin_recv(soap) || !soap_get_zkq__getAllDevices(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkq__getAllDevicesResponse
#define SOAP_TYPE_zkq__getAllDevicesResponse (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkq__getAllDevicesResponse(struct soap*, struct zkq__getAllDevicesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkq__getAllDevicesResponse(struct soap*, const struct zkq__getAllDevicesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkq__getAllDevicesResponse(struct soap*, const char*, int, const struct zkq__getAllDevicesResponse *, const char*);
SOAP_FMAC3 struct zkq__getAllDevicesResponse * SOAP_FMAC4 soap_in_zkq__getAllDevicesResponse(struct soap*, const char*, struct zkq__getAllDevicesResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkq__getAllDevicesResponse(struct soap*, const struct zkq__getAllDevicesResponse *, const char*, const char*);

#ifndef soap_write_zkq__getAllDevicesResponse
#define soap_write_zkq__getAllDevicesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkq__getAllDevicesResponse(soap, data),0) || soap_put_zkq__getAllDevicesResponse(soap, data, "zkq:getAllDevicesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkq__getAllDevicesResponse * SOAP_FMAC4 soap_get_zkq__getAllDevicesResponse(struct soap*, struct zkq__getAllDevicesResponse *, const char*, const char*);

#ifndef soap_read_zkq__getAllDevicesResponse
#define soap_read_zkq__getAllDevicesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkq__getAllDevicesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkq__getAllServices
#define SOAP_TYPE_zkq__getAllServices (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkq__getAllServices(struct soap*, struct zkq__getAllServices *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkq__getAllServices(struct soap*, const struct zkq__getAllServices *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkq__getAllServices(struct soap*, const char*, int, const struct zkq__getAllServices *, const char*);
SOAP_FMAC3 struct zkq__getAllServices * SOAP_FMAC4 soap_in_zkq__getAllServices(struct soap*, const char*, struct zkq__getAllServices *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkq__getAllServices(struct soap*, const struct zkq__getAllServices *, const char*, const char*);

#ifndef soap_write_zkq__getAllServices
#define soap_write_zkq__getAllServices(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkq__getAllServices(soap, data),0) || soap_put_zkq__getAllServices(soap, data, "zkq:getAllServices", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkq__getAllServices * SOAP_FMAC4 soap_get_zkq__getAllServices(struct soap*, struct zkq__getAllServices *, const char*, const char*);

#ifndef soap_read_zkq__getAllServices
#define soap_read_zkq__getAllServices(soap, data) ( soap_begin_recv(soap) || !soap_get_zkq__getAllServices(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkq__getAllServicesResponse
#define SOAP_TYPE_zkq__getAllServicesResponse (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkq__getAllServicesResponse(struct soap*, struct zkq__getAllServicesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkq__getAllServicesResponse(struct soap*, const struct zkq__getAllServicesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkq__getAllServicesResponse(struct soap*, const char*, int, const struct zkq__getAllServicesResponse *, const char*);
SOAP_FMAC3 struct zkq__getAllServicesResponse * SOAP_FMAC4 soap_in_zkq__getAllServicesResponse(struct soap*, const char*, struct zkq__getAllServicesResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkq__getAllServicesResponse(struct soap*, const struct zkq__getAllServicesResponse *, const char*, const char*);

#ifndef soap_write_zkq__getAllServicesResponse
#define soap_write_zkq__getAllServicesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkq__getAllServicesResponse(soap, data),0) || soap_put_zkq__getAllServicesResponse(soap, data, "zkq:getAllServicesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkq__getAllServicesResponse * SOAP_FMAC4 soap_get_zkq__getAllServicesResponse(struct soap*, struct zkq__getAllServicesResponse *, const char*, const char*);

#ifndef soap_read_zkq__getAllServicesResponse
#define soap_read_zkq__getAllServicesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkq__getAllServicesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkq__getAllHosts
#define SOAP_TYPE_zkq__getAllHosts (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkq__getAllHosts(struct soap*, struct zkq__getAllHosts *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkq__getAllHosts(struct soap*, const struct zkq__getAllHosts *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkq__getAllHosts(struct soap*, const char*, int, const struct zkq__getAllHosts *, const char*);
SOAP_FMAC3 struct zkq__getAllHosts * SOAP_FMAC4 soap_in_zkq__getAllHosts(struct soap*, const char*, struct zkq__getAllHosts *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkq__getAllHosts(struct soap*, const struct zkq__getAllHosts *, const char*, const char*);

#ifndef soap_write_zkq__getAllHosts
#define soap_write_zkq__getAllHosts(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkq__getAllHosts(soap, data),0) || soap_put_zkq__getAllHosts(soap, data, "zkq:getAllHosts", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkq__getAllHosts * SOAP_FMAC4 soap_get_zkq__getAllHosts(struct soap*, struct zkq__getAllHosts *, const char*, const char*);

#ifndef soap_read_zkq__getAllHosts
#define soap_read_zkq__getAllHosts(soap, data) ( soap_begin_recv(soap) || !soap_get_zkq__getAllHosts(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkq__getAllHostsResponse
#define SOAP_TYPE_zkq__getAllHostsResponse (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkq__getAllHostsResponse(struct soap*, struct zkq__getAllHostsResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkq__getAllHostsResponse(struct soap*, const struct zkq__getAllHostsResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkq__getAllHostsResponse(struct soap*, const char*, int, const struct zkq__getAllHostsResponse *, const char*);
SOAP_FMAC3 struct zkq__getAllHostsResponse * SOAP_FMAC4 soap_in_zkq__getAllHostsResponse(struct soap*, const char*, struct zkq__getAllHostsResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkq__getAllHostsResponse(struct soap*, const struct zkq__getAllHostsResponse *, const char*, const char*);

#ifndef soap_write_zkq__getAllHostsResponse
#define soap_write_zkq__getAllHostsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkq__getAllHostsResponse(soap, data),0) || soap_put_zkq__getAllHostsResponse(soap, data, "zkq:getAllHostsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkq__getAllHostsResponse * SOAP_FMAC4 soap_get_zkq__getAllHostsResponse(struct soap*, struct zkq__getAllHostsResponse *, const char*, const char*);

#ifndef soap_read_zkq__getAllHostsResponse
#define soap_read_zkq__getAllHostsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkq__getAllHostsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkq__getAllMses
#define SOAP_TYPE_zkq__getAllMses (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkq__getAllMses(struct soap*, struct zkq__getAllMses *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkq__getAllMses(struct soap*, const struct zkq__getAllMses *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkq__getAllMses(struct soap*, const char*, int, const struct zkq__getAllMses *, const char*);
SOAP_FMAC3 struct zkq__getAllMses * SOAP_FMAC4 soap_in_zkq__getAllMses(struct soap*, const char*, struct zkq__getAllMses *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkq__getAllMses(struct soap*, const struct zkq__getAllMses *, const char*, const char*);

#ifndef soap_write_zkq__getAllMses
#define soap_write_zkq__getAllMses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkq__getAllMses(soap, data),0) || soap_put_zkq__getAllMses(soap, data, "zkq:getAllMses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkq__getAllMses * SOAP_FMAC4 soap_get_zkq__getAllMses(struct soap*, struct zkq__getAllMses *, const char*, const char*);

#ifndef soap_read_zkq__getAllMses
#define soap_read_zkq__getAllMses(soap, data) ( soap_begin_recv(soap) || !soap_get_zkq__getAllMses(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkq__getAllMsesResponse
#define SOAP_TYPE_zkq__getAllMsesResponse (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkq__getAllMsesResponse(struct soap*, struct zkq__getAllMsesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkq__getAllMsesResponse(struct soap*, const struct zkq__getAllMsesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkq__getAllMsesResponse(struct soap*, const char*, int, const struct zkq__getAllMsesResponse *, const char*);
SOAP_FMAC3 struct zkq__getAllMsesResponse * SOAP_FMAC4 soap_in_zkq__getAllMsesResponse(struct soap*, const char*, struct zkq__getAllMsesResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkq__getAllMsesResponse(struct soap*, const struct zkq__getAllMsesResponse *, const char*, const char*);

#ifndef soap_write_zkq__getAllMsesResponse
#define soap_write_zkq__getAllMsesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkq__getAllMsesResponse(soap, data),0) || soap_put_zkq__getAllMsesResponse(soap, data, "zkq:getAllMsesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkq__getAllMsesResponse * SOAP_FMAC4 soap_get_zkq__getAllMsesResponse(struct soap*, struct zkq__getAllMsesResponse *, const char*, const char*);

#ifndef soap_read_zkq__getAllMsesResponse
#define soap_read_zkq__getAllMsesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkq__getAllMsesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__setShowName
#define SOAP_TYPE_zkreg__setShowName (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__setShowName(struct soap*, struct zkreg__setShowName *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__setShowName(struct soap*, const struct zkreg__setShowName *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__setShowName(struct soap*, const char*, int, const struct zkreg__setShowName *, const char*);
SOAP_FMAC3 struct zkreg__setShowName * SOAP_FMAC4 soap_in_zkreg__setShowName(struct soap*, const char*, struct zkreg__setShowName *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__setShowName(struct soap*, const struct zkreg__setShowName *, const char*, const char*);

#ifndef soap_write_zkreg__setShowName
#define soap_write_zkreg__setShowName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__setShowName(soap, data),0) || soap_put_zkreg__setShowName(soap, data, "zkreg:setShowName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__setShowName * SOAP_FMAC4 soap_get_zkreg__setShowName(struct soap*, struct zkreg__setShowName *, const char*, const char*);

#ifndef soap_read_zkreg__setShowName
#define soap_read_zkreg__setShowName(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__setShowName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__setShowNameResponse
#define SOAP_TYPE_zkreg__setShowNameResponse (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__setShowNameResponse(struct soap*, struct zkreg__setShowNameResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__setShowNameResponse(struct soap*, const struct zkreg__setShowNameResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__setShowNameResponse(struct soap*, const char*, int, const struct zkreg__setShowNameResponse *, const char*);
SOAP_FMAC3 struct zkreg__setShowNameResponse * SOAP_FMAC4 soap_in_zkreg__setShowNameResponse(struct soap*, const char*, struct zkreg__setShowNameResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__setShowNameResponse(struct soap*, const struct zkreg__setShowNameResponse *, const char*, const char*);

#ifndef soap_write_zkreg__setShowNameResponse
#define soap_write_zkreg__setShowNameResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__setShowNameResponse(soap, data),0) || soap_put_zkreg__setShowNameResponse(soap, data, "zkreg:setShowNameResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__setShowNameResponse * SOAP_FMAC4 soap_get_zkreg__setShowNameResponse(struct soap*, struct zkreg__setShowNameResponse *, const char*, const char*);

#ifndef soap_read_zkreg__setShowNameResponse
#define soap_read_zkreg__setShowNameResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__setShowNameResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__heartBeat
#define SOAP_TYPE_zkreg__heartBeat (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__heartBeat(struct soap*, struct zkreg__heartBeat *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__heartBeat(struct soap*, const struct zkreg__heartBeat *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__heartBeat(struct soap*, const char*, int, const struct zkreg__heartBeat *, const char*);
SOAP_FMAC3 struct zkreg__heartBeat * SOAP_FMAC4 soap_in_zkreg__heartBeat(struct soap*, const char*, struct zkreg__heartBeat *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__heartBeat(struct soap*, const struct zkreg__heartBeat *, const char*, const char*);

#ifndef soap_write_zkreg__heartBeat
#define soap_write_zkreg__heartBeat(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__heartBeat(soap, data),0) || soap_put_zkreg__heartBeat(soap, data, "zkreg:heartBeat", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__heartBeat * SOAP_FMAC4 soap_get_zkreg__heartBeat(struct soap*, struct zkreg__heartBeat *, const char*, const char*);

#ifndef soap_read_zkreg__heartBeat
#define soap_read_zkreg__heartBeat(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__heartBeat(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__heartBeatResponse
#define SOAP_TYPE_zkreg__heartBeatResponse (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__heartBeatResponse(struct soap*, struct zkreg__heartBeatResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__heartBeatResponse(struct soap*, const struct zkreg__heartBeatResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__heartBeatResponse(struct soap*, const char*, int, const struct zkreg__heartBeatResponse *, const char*);
SOAP_FMAC3 struct zkreg__heartBeatResponse * SOAP_FMAC4 soap_in_zkreg__heartBeatResponse(struct soap*, const char*, struct zkreg__heartBeatResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__heartBeatResponse(struct soap*, const struct zkreg__heartBeatResponse *, const char*, const char*);

#ifndef soap_write_zkreg__heartBeatResponse
#define soap_write_zkreg__heartBeatResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__heartBeatResponse(soap, data),0) || soap_put_zkreg__heartBeatResponse(soap, data, "zkreg:heartBeatResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__heartBeatResponse * SOAP_FMAC4 soap_get_zkreg__heartBeatResponse(struct soap*, struct zkreg__heartBeatResponse *, const char*, const char*);

#ifndef soap_read_zkreg__heartBeatResponse
#define soap_read_zkreg__heartBeatResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__heartBeatResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__unregDevice
#define SOAP_TYPE_zkreg__unregDevice (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__unregDevice(struct soap*, struct zkreg__unregDevice *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__unregDevice(struct soap*, const struct zkreg__unregDevice *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__unregDevice(struct soap*, const char*, int, const struct zkreg__unregDevice *, const char*);
SOAP_FMAC3 struct zkreg__unregDevice * SOAP_FMAC4 soap_in_zkreg__unregDevice(struct soap*, const char*, struct zkreg__unregDevice *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__unregDevice(struct soap*, const struct zkreg__unregDevice *, const char*, const char*);

#ifndef soap_write_zkreg__unregDevice
#define soap_write_zkreg__unregDevice(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__unregDevice(soap, data),0) || soap_put_zkreg__unregDevice(soap, data, "zkreg:unregDevice", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__unregDevice * SOAP_FMAC4 soap_get_zkreg__unregDevice(struct soap*, struct zkreg__unregDevice *, const char*, const char*);

#ifndef soap_read_zkreg__unregDevice
#define soap_read_zkreg__unregDevice(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__unregDevice(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__unregDeviceResponse
#define SOAP_TYPE_zkreg__unregDeviceResponse (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__unregDeviceResponse(struct soap*, struct zkreg__unregDeviceResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__unregDeviceResponse(struct soap*, const struct zkreg__unregDeviceResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__unregDeviceResponse(struct soap*, const char*, int, const struct zkreg__unregDeviceResponse *, const char*);
SOAP_FMAC3 struct zkreg__unregDeviceResponse * SOAP_FMAC4 soap_in_zkreg__unregDeviceResponse(struct soap*, const char*, struct zkreg__unregDeviceResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__unregDeviceResponse(struct soap*, const struct zkreg__unregDeviceResponse *, const char*, const char*);

#ifndef soap_write_zkreg__unregDeviceResponse
#define soap_write_zkreg__unregDeviceResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__unregDeviceResponse(soap, data),0) || soap_put_zkreg__unregDeviceResponse(soap, data, "zkreg:unregDeviceResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__unregDeviceResponse * SOAP_FMAC4 soap_get_zkreg__unregDeviceResponse(struct soap*, struct zkreg__unregDeviceResponse *, const char*, const char*);

#ifndef soap_read_zkreg__unregDeviceResponse
#define soap_read_zkreg__unregDeviceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__unregDeviceResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__regDevice
#define SOAP_TYPE_zkreg__regDevice (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__regDevice(struct soap*, struct zkreg__regDevice *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__regDevice(struct soap*, const struct zkreg__regDevice *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__regDevice(struct soap*, const char*, int, const struct zkreg__regDevice *, const char*);
SOAP_FMAC3 struct zkreg__regDevice * SOAP_FMAC4 soap_in_zkreg__regDevice(struct soap*, const char*, struct zkreg__regDevice *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__regDevice(struct soap*, const struct zkreg__regDevice *, const char*, const char*);

#ifndef soap_write_zkreg__regDevice
#define soap_write_zkreg__regDevice(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__regDevice(soap, data),0) || soap_put_zkreg__regDevice(soap, data, "zkreg:regDevice", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__regDevice * SOAP_FMAC4 soap_get_zkreg__regDevice(struct soap*, struct zkreg__regDevice *, const char*, const char*);

#ifndef soap_read_zkreg__regDevice
#define soap_read_zkreg__regDevice(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__regDevice(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__regDeviceResponse
#define SOAP_TYPE_zkreg__regDeviceResponse (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__regDeviceResponse(struct soap*, struct zkreg__regDeviceResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__regDeviceResponse(struct soap*, const struct zkreg__regDeviceResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__regDeviceResponse(struct soap*, const char*, int, const struct zkreg__regDeviceResponse *, const char*);
SOAP_FMAC3 struct zkreg__regDeviceResponse * SOAP_FMAC4 soap_in_zkreg__regDeviceResponse(struct soap*, const char*, struct zkreg__regDeviceResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__regDeviceResponse(struct soap*, const struct zkreg__regDeviceResponse *, const char*, const char*);

#ifndef soap_write_zkreg__regDeviceResponse
#define soap_write_zkreg__regDeviceResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__regDeviceResponse(soap, data),0) || soap_put_zkreg__regDeviceResponse(soap, data, "zkreg:regDeviceResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__regDeviceResponse * SOAP_FMAC4 soap_get_zkreg__regDeviceResponse(struct soap*, struct zkreg__regDeviceResponse *, const char*, const char*);

#ifndef soap_read_zkreg__regDeviceResponse
#define soap_read_zkreg__regDeviceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__regDeviceResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__unregService
#define SOAP_TYPE_zkreg__unregService (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__unregService(struct soap*, struct zkreg__unregService *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__unregService(struct soap*, const struct zkreg__unregService *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__unregService(struct soap*, const char*, int, const struct zkreg__unregService *, const char*);
SOAP_FMAC3 struct zkreg__unregService * SOAP_FMAC4 soap_in_zkreg__unregService(struct soap*, const char*, struct zkreg__unregService *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__unregService(struct soap*, const struct zkreg__unregService *, const char*, const char*);

#ifndef soap_write_zkreg__unregService
#define soap_write_zkreg__unregService(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__unregService(soap, data),0) || soap_put_zkreg__unregService(soap, data, "zkreg:unregService", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__unregService * SOAP_FMAC4 soap_get_zkreg__unregService(struct soap*, struct zkreg__unregService *, const char*, const char*);

#ifndef soap_read_zkreg__unregService
#define soap_read_zkreg__unregService(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__unregService(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__unregServiceResponse
#define SOAP_TYPE_zkreg__unregServiceResponse (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__unregServiceResponse(struct soap*, struct zkreg__unregServiceResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__unregServiceResponse(struct soap*, const struct zkreg__unregServiceResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__unregServiceResponse(struct soap*, const char*, int, const struct zkreg__unregServiceResponse *, const char*);
SOAP_FMAC3 struct zkreg__unregServiceResponse * SOAP_FMAC4 soap_in_zkreg__unregServiceResponse(struct soap*, const char*, struct zkreg__unregServiceResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__unregServiceResponse(struct soap*, const struct zkreg__unregServiceResponse *, const char*, const char*);

#ifndef soap_write_zkreg__unregServiceResponse
#define soap_write_zkreg__unregServiceResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__unregServiceResponse(soap, data),0) || soap_put_zkreg__unregServiceResponse(soap, data, "zkreg:unregServiceResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__unregServiceResponse * SOAP_FMAC4 soap_get_zkreg__unregServiceResponse(struct soap*, struct zkreg__unregServiceResponse *, const char*, const char*);

#ifndef soap_read_zkreg__unregServiceResponse
#define soap_read_zkreg__unregServiceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__unregServiceResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__regService
#define SOAP_TYPE_zkreg__regService (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__regService(struct soap*, struct zkreg__regService *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__regService(struct soap*, const struct zkreg__regService *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__regService(struct soap*, const char*, int, const struct zkreg__regService *, const char*);
SOAP_FMAC3 struct zkreg__regService * SOAP_FMAC4 soap_in_zkreg__regService(struct soap*, const char*, struct zkreg__regService *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__regService(struct soap*, const struct zkreg__regService *, const char*, const char*);

#ifndef soap_write_zkreg__regService
#define soap_write_zkreg__regService(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__regService(soap, data),0) || soap_put_zkreg__regService(soap, data, "zkreg:regService", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__regService * SOAP_FMAC4 soap_get_zkreg__regService(struct soap*, struct zkreg__regService *, const char*, const char*);

#ifndef soap_read_zkreg__regService
#define soap_read_zkreg__regService(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__regService(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__regServiceResponse
#define SOAP_TYPE_zkreg__regServiceResponse (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__regServiceResponse(struct soap*, struct zkreg__regServiceResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__regServiceResponse(struct soap*, const struct zkreg__regServiceResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__regServiceResponse(struct soap*, const char*, int, const struct zkreg__regServiceResponse *, const char*);
SOAP_FMAC3 struct zkreg__regServiceResponse * SOAP_FMAC4 soap_in_zkreg__regServiceResponse(struct soap*, const char*, struct zkreg__regServiceResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__regServiceResponse(struct soap*, const struct zkreg__regServiceResponse *, const char*, const char*);

#ifndef soap_write_zkreg__regServiceResponse
#define soap_write_zkreg__regServiceResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__regServiceResponse(soap, data),0) || soap_put_zkreg__regServiceResponse(soap, data, "zkreg:regServiceResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__regServiceResponse * SOAP_FMAC4 soap_get_zkreg__regServiceResponse(struct soap*, struct zkreg__regServiceResponse *, const char*, const char*);

#ifndef soap_read_zkreg__regServiceResponse
#define soap_read_zkreg__regServiceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__regServiceResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__unregHost
#define SOAP_TYPE_zkreg__unregHost (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__unregHost(struct soap*, struct zkreg__unregHost *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__unregHost(struct soap*, const struct zkreg__unregHost *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__unregHost(struct soap*, const char*, int, const struct zkreg__unregHost *, const char*);
SOAP_FMAC3 struct zkreg__unregHost * SOAP_FMAC4 soap_in_zkreg__unregHost(struct soap*, const char*, struct zkreg__unregHost *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__unregHost(struct soap*, const struct zkreg__unregHost *, const char*, const char*);

#ifndef soap_write_zkreg__unregHost
#define soap_write_zkreg__unregHost(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__unregHost(soap, data),0) || soap_put_zkreg__unregHost(soap, data, "zkreg:unregHost", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__unregHost * SOAP_FMAC4 soap_get_zkreg__unregHost(struct soap*, struct zkreg__unregHost *, const char*, const char*);

#ifndef soap_read_zkreg__unregHost
#define soap_read_zkreg__unregHost(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__unregHost(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__unregHostResponse
#define SOAP_TYPE_zkreg__unregHostResponse (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__unregHostResponse(struct soap*, struct zkreg__unregHostResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__unregHostResponse(struct soap*, const struct zkreg__unregHostResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__unregHostResponse(struct soap*, const char*, int, const struct zkreg__unregHostResponse *, const char*);
SOAP_FMAC3 struct zkreg__unregHostResponse * SOAP_FMAC4 soap_in_zkreg__unregHostResponse(struct soap*, const char*, struct zkreg__unregHostResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__unregHostResponse(struct soap*, const struct zkreg__unregHostResponse *, const char*, const char*);

#ifndef soap_write_zkreg__unregHostResponse
#define soap_write_zkreg__unregHostResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__unregHostResponse(soap, data),0) || soap_put_zkreg__unregHostResponse(soap, data, "zkreg:unregHostResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__unregHostResponse * SOAP_FMAC4 soap_get_zkreg__unregHostResponse(struct soap*, struct zkreg__unregHostResponse *, const char*, const char*);

#ifndef soap_read_zkreg__unregHostResponse
#define soap_read_zkreg__unregHostResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__unregHostResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__regHost
#define SOAP_TYPE_zkreg__regHost (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__regHost(struct soap*, struct zkreg__regHost *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__regHost(struct soap*, const struct zkreg__regHost *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__regHost(struct soap*, const char*, int, const struct zkreg__regHost *, const char*);
SOAP_FMAC3 struct zkreg__regHost * SOAP_FMAC4 soap_in_zkreg__regHost(struct soap*, const char*, struct zkreg__regHost *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__regHost(struct soap*, const struct zkreg__regHost *, const char*, const char*);

#ifndef soap_write_zkreg__regHost
#define soap_write_zkreg__regHost(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__regHost(soap, data),0) || soap_put_zkreg__regHost(soap, data, "zkreg:regHost", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__regHost * SOAP_FMAC4 soap_get_zkreg__regHost(struct soap*, struct zkreg__regHost *, const char*, const char*);

#ifndef soap_read_zkreg__regHost
#define soap_read_zkreg__regHost(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__regHost(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__regHostResponse
#define SOAP_TYPE_zkreg__regHostResponse (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__regHostResponse(struct soap*, struct zkreg__regHostResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__regHostResponse(struct soap*, const struct zkreg__regHostResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__regHostResponse(struct soap*, const char*, int, const struct zkreg__regHostResponse *, const char*);
SOAP_FMAC3 struct zkreg__regHostResponse * SOAP_FMAC4 soap_in_zkreg__regHostResponse(struct soap*, const char*, struct zkreg__regHostResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__regHostResponse(struct soap*, const struct zkreg__regHostResponse *, const char*, const char*);

#ifndef soap_write_zkreg__regHostResponse
#define soap_write_zkreg__regHostResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__regHostResponse(soap, data),0) || soap_put_zkreg__regHostResponse(soap, data, "zkreg:regHostResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__regHostResponse * SOAP_FMAC4 soap_get_zkreg__regHostResponse(struct soap*, struct zkreg__regHostResponse *, const char*, const char*);

#ifndef soap_read_zkreg__regHostResponse
#define soap_read_zkreg__regHostResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__regHostResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkcfg__keys
#define SOAP_TYPE_zkcfg__keys (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkcfg__keys(struct soap*, struct zkcfg__keys *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkcfg__keys(struct soap*, struct zkcfg__keys const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkcfg__keys(struct soap*, const char*, int, const struct zkcfg__keys *, const char*);
SOAP_FMAC3 struct zkcfg__keys * SOAP_FMAC4 soap_in_zkcfg__keys(struct soap*, const char*, struct zkcfg__keys *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkcfg__keys(struct soap*, const struct zkcfg__keys *, const char*, const char*);

#ifndef soap_write_zkcfg__keys
#define soap_write_zkcfg__keys(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkcfg__keys(soap, data),0) || soap_put_zkcfg__keys(soap, data, "zkcfg:keys", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkcfg__keys * SOAP_FMAC4 soap_get_zkcfg__keys(struct soap*, struct zkcfg__keys *, const char*, const char*);

#ifndef soap_read_zkcfg__keys
#define soap_read_zkcfg__keys(soap, data) ( soap_begin_recv(soap) || !soap_get_zkcfg__keys(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__Logics
#define SOAP_TYPE_zkreg__Logics (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__Logics(struct soap*, struct zkreg__Logics *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__Logics(struct soap*, struct zkreg__Logics const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__Logics(struct soap*, const char*, int, const struct zkreg__Logics *, const char*);
SOAP_FMAC3 struct zkreg__Logics * SOAP_FMAC4 soap_in_zkreg__Logics(struct soap*, const char*, struct zkreg__Logics *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__Logics(struct soap*, const struct zkreg__Logics *, const char*, const char*);

#ifndef soap_write_zkreg__Logics
#define soap_write_zkreg__Logics(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__Logics(soap, data),0) || soap_put_zkreg__Logics(soap, data, "zkreg:Logics", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Logics * SOAP_FMAC4 soap_get_zkreg__Logics(struct soap*, struct zkreg__Logics *, const char*, const char*);

#ifndef soap_read_zkreg__Logics
#define soap_read_zkreg__Logics(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__Logics(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__Logic
#define SOAP_TYPE_zkreg__Logic (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__Logic(struct soap*, struct zkreg__Logic *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__Logic(struct soap*, const struct zkreg__Logic *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__Logic(struct soap*, const char*, int, const struct zkreg__Logic *, const char*);
SOAP_FMAC3 struct zkreg__Logic * SOAP_FMAC4 soap_in_zkreg__Logic(struct soap*, const char*, struct zkreg__Logic *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__Logic(struct soap*, const struct zkreg__Logic *, const char*, const char*);

#ifndef soap_write_zkreg__Logic
#define soap_write_zkreg__Logic(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__Logic(soap, data),0) || soap_put_zkreg__Logic(soap, data, "zkreg:Logic", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Logic * SOAP_FMAC4 soap_get_zkreg__Logic(struct soap*, struct zkreg__Logic *, const char*, const char*);

#ifndef soap_read_zkreg__Logic
#define soap_read_zkreg__Logic(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__Logic(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__Devices
#define SOAP_TYPE_zkreg__Devices (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__Devices(struct soap*, struct zkreg__Devices *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__Devices(struct soap*, struct zkreg__Devices const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__Devices(struct soap*, const char*, int, const struct zkreg__Devices *, const char*);
SOAP_FMAC3 struct zkreg__Devices * SOAP_FMAC4 soap_in_zkreg__Devices(struct soap*, const char*, struct zkreg__Devices *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__Devices(struct soap*, const struct zkreg__Devices *, const char*, const char*);

#ifndef soap_write_zkreg__Devices
#define soap_write_zkreg__Devices(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__Devices(soap, data),0) || soap_put_zkreg__Devices(soap, data, "zkreg:Devices", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Devices * SOAP_FMAC4 soap_get_zkreg__Devices(struct soap*, struct zkreg__Devices *, const char*, const char*);

#ifndef soap_read_zkreg__Devices
#define soap_read_zkreg__Devices(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__Devices(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__Device
#define SOAP_TYPE_zkreg__Device (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__Device(struct soap*, struct zkreg__Device *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__Device(struct soap*, const struct zkreg__Device *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__Device(struct soap*, const char*, int, const struct zkreg__Device *, const char*);
SOAP_FMAC3 struct zkreg__Device * SOAP_FMAC4 soap_in_zkreg__Device(struct soap*, const char*, struct zkreg__Device *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__Device(struct soap*, const struct zkreg__Device *, const char*, const char*);

#ifndef soap_write_zkreg__Device
#define soap_write_zkreg__Device(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__Device(soap, data),0) || soap_put_zkreg__Device(soap, data, "zkreg:Device", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Device * SOAP_FMAC4 soap_get_zkreg__Device(struct soap*, struct zkreg__Device *, const char*, const char*);

#ifndef soap_read_zkreg__Device
#define soap_read_zkreg__Device(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__Device(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__Services
#define SOAP_TYPE_zkreg__Services (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__Services(struct soap*, struct zkreg__Services *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__Services(struct soap*, struct zkreg__Services const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__Services(struct soap*, const char*, int, const struct zkreg__Services *, const char*);
SOAP_FMAC3 struct zkreg__Services * SOAP_FMAC4 soap_in_zkreg__Services(struct soap*, const char*, struct zkreg__Services *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__Services(struct soap*, const struct zkreg__Services *, const char*, const char*);

#ifndef soap_write_zkreg__Services
#define soap_write_zkreg__Services(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__Services(soap, data),0) || soap_put_zkreg__Services(soap, data, "zkreg:Services", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Services * SOAP_FMAC4 soap_get_zkreg__Services(struct soap*, struct zkreg__Services *, const char*, const char*);

#ifndef soap_read_zkreg__Services
#define soap_read_zkreg__Services(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__Services(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__Service
#define SOAP_TYPE_zkreg__Service (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__Service(struct soap*, struct zkreg__Service *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__Service(struct soap*, const struct zkreg__Service *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__Service(struct soap*, const char*, int, const struct zkreg__Service *, const char*);
SOAP_FMAC3 struct zkreg__Service * SOAP_FMAC4 soap_in_zkreg__Service(struct soap*, const char*, struct zkreg__Service *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__Service(struct soap*, const struct zkreg__Service *, const char*, const char*);

#ifndef soap_write_zkreg__Service
#define soap_write_zkreg__Service(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__Service(soap, data),0) || soap_put_zkreg__Service(soap, data, "zkreg:Service", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Service * SOAP_FMAC4 soap_get_zkreg__Service(struct soap*, struct zkreg__Service *, const char*, const char*);

#ifndef soap_read_zkreg__Service
#define soap_read_zkreg__Service(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__Service(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__Hosts
#define SOAP_TYPE_zkreg__Hosts (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__Hosts(struct soap*, struct zkreg__Hosts *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__Hosts(struct soap*, struct zkreg__Hosts const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__Hosts(struct soap*, const char*, int, const struct zkreg__Hosts *, const char*);
SOAP_FMAC3 struct zkreg__Hosts * SOAP_FMAC4 soap_in_zkreg__Hosts(struct soap*, const char*, struct zkreg__Hosts *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__Hosts(struct soap*, const struct zkreg__Hosts *, const char*, const char*);

#ifndef soap_write_zkreg__Hosts
#define soap_write_zkreg__Hosts(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__Hosts(soap, data),0) || soap_put_zkreg__Hosts(soap, data, "zkreg:Hosts", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Hosts * SOAP_FMAC4 soap_get_zkreg__Hosts(struct soap*, struct zkreg__Hosts *, const char*, const char*);

#ifndef soap_read_zkreg__Hosts
#define soap_read_zkreg__Hosts(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__Hosts(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__Host
#define SOAP_TYPE_zkreg__Host (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__Host(struct soap*, struct zkreg__Host *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__Host(struct soap*, const struct zkreg__Host *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__Host(struct soap*, const char*, int, const struct zkreg__Host *, const char*);
SOAP_FMAC3 struct zkreg__Host * SOAP_FMAC4 soap_in_zkreg__Host(struct soap*, const char*, struct zkreg__Host *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__Host(struct soap*, const struct zkreg__Host *, const char*, const char*);

#ifndef soap_write_zkreg__Host
#define soap_write_zkreg__Host(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__Host(soap, data),0) || soap_put_zkreg__Host(soap, data, "zkreg:Host", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Host * SOAP_FMAC4 soap_get_zkreg__Host(struct soap*, struct zkreg__Host *, const char*, const char*);

#ifndef soap_read_zkreg__Host
#define soap_read_zkreg__Host(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__Host(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__Mses
#define SOAP_TYPE_zkreg__Mses (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__Mses(struct soap*, struct zkreg__Mses *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__Mses(struct soap*, struct zkreg__Mses const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__Mses(struct soap*, const char*, int, const struct zkreg__Mses *, const char*);
SOAP_FMAC3 struct zkreg__Mses * SOAP_FMAC4 soap_in_zkreg__Mses(struct soap*, const char*, struct zkreg__Mses *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__Mses(struct soap*, const struct zkreg__Mses *, const char*, const char*);

#ifndef soap_write_zkreg__Mses
#define soap_write_zkreg__Mses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__Mses(soap, data),0) || soap_put_zkreg__Mses(soap, data, "zkreg:Mses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Mses * SOAP_FMAC4 soap_get_zkreg__Mses(struct soap*, struct zkreg__Mses *, const char*, const char*);

#ifndef soap_read_zkreg__Mses
#define soap_read_zkreg__Mses(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__Mses(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__Mse
#define SOAP_TYPE_zkreg__Mse (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__Mse(struct soap*, struct zkreg__Mse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__Mse(struct soap*, const struct zkreg__Mse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__Mse(struct soap*, const char*, int, const struct zkreg__Mse *, const char*);
SOAP_FMAC3 struct zkreg__Mse * SOAP_FMAC4 soap_in_zkreg__Mse(struct soap*, const char*, struct zkreg__Mse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__Mse(struct soap*, const struct zkreg__Mse *, const char*, const char*);

#ifndef soap_write_zkreg__Mse
#define soap_write_zkreg__Mse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__Mse(soap, data),0) || soap_put_zkreg__Mse(soap, data, "zkreg:Mse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Mse * SOAP_FMAC4 soap_get_zkreg__Mse(struct soap*, struct zkreg__Mse *, const char*, const char*);

#ifndef soap_read_zkreg__Mse
#define soap_read_zkreg__Mse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__Mse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__Urls
#define SOAP_TYPE_zkreg__Urls (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__Urls(struct soap*, struct zkreg__Urls *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__Urls(struct soap*, struct zkreg__Urls const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__Urls(struct soap*, const char*, int, const struct zkreg__Urls *, const char*);
SOAP_FMAC3 struct zkreg__Urls * SOAP_FMAC4 soap_in_zkreg__Urls(struct soap*, const char*, struct zkreg__Urls *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__Urls(struct soap*, const struct zkreg__Urls *, const char*, const char*);

#ifndef soap_write_zkreg__Urls
#define soap_write_zkreg__Urls(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__Urls(soap, data),0) || soap_put_zkreg__Urls(soap, data, "zkreg:Urls", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Urls * SOAP_FMAC4 soap_get_zkreg__Urls(struct soap*, struct zkreg__Urls *, const char*, const char*);

#ifndef soap_read_zkreg__Urls
#define soap_read_zkreg__Urls(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__Urls(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_zkreg__Ips
#define SOAP_TYPE_zkreg__Ips (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkreg__Ips(struct soap*, struct zkreg__Ips *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkreg__Ips(struct soap*, struct zkreg__Ips const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkreg__Ips(struct soap*, const char*, int, const struct zkreg__Ips *, const char*);
SOAP_FMAC3 struct zkreg__Ips * SOAP_FMAC4 soap_in_zkreg__Ips(struct soap*, const char*, struct zkreg__Ips *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkreg__Ips(struct soap*, const struct zkreg__Ips *, const char*, const char*);

#ifndef soap_write_zkreg__Ips
#define soap_write_zkreg__Ips(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkreg__Ips(soap, data),0) || soap_put_zkreg__Ips(soap, data, "zkreg:Ips", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Ips * SOAP_FMAC4 soap_get_zkreg__Ips(struct soap*, struct zkreg__Ips *, const char*, const char*);

#ifndef soap_read_zkreg__Ips
#define soap_read_zkreg__Ips(soap, data) ( soap_begin_recv(soap) || !soap_get_zkreg__Ips(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (101)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (97)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTozkcfg__keys
#define SOAP_TYPE_PointerTozkcfg__keys (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkcfg__keys(struct soap*, struct zkcfg__keys *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkcfg__keys(struct soap*, const char *, int, struct zkcfg__keys *const*, const char *);
SOAP_FMAC3 struct zkcfg__keys ** SOAP_FMAC4 soap_in_PointerTozkcfg__keys(struct soap*, const char*, struct zkcfg__keys **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkcfg__keys(struct soap*, struct zkcfg__keys *const*, const char*, const char*);

#ifndef soap_write_PointerTozkcfg__keys
#define soap_write_PointerTozkcfg__keys(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkcfg__keys(soap, data),0) || soap_put_PointerTozkcfg__keys(soap, data, "zkcfg:keys", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkcfg__keys ** SOAP_FMAC4 soap_get_PointerTozkcfg__keys(struct soap*, struct zkcfg__keys **, const char*, const char*);

#ifndef soap_read_PointerTozkcfg__keys
#define soap_read_PointerTozkcfg__keys(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkcfg__keys(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkreg__Logics
#define SOAP_TYPE_PointerTozkreg__Logics (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkreg__Logics(struct soap*, struct zkreg__Logics *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkreg__Logics(struct soap*, const char *, int, struct zkreg__Logics *const*, const char *);
SOAP_FMAC3 struct zkreg__Logics ** SOAP_FMAC4 soap_in_PointerTozkreg__Logics(struct soap*, const char*, struct zkreg__Logics **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkreg__Logics(struct soap*, struct zkreg__Logics *const*, const char*, const char*);

#ifndef soap_write_PointerTozkreg__Logics
#define soap_write_PointerTozkreg__Logics(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkreg__Logics(soap, data),0) || soap_put_PointerTozkreg__Logics(soap, data, "zkreg:Logics", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Logics ** SOAP_FMAC4 soap_get_PointerTozkreg__Logics(struct soap*, struct zkreg__Logics **, const char*, const char*);

#ifndef soap_read_PointerTozkreg__Logics
#define soap_read_PointerTozkreg__Logics(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkreg__Logics(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkreg__Devices
#define SOAP_TYPE_PointerTozkreg__Devices (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkreg__Devices(struct soap*, struct zkreg__Devices *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkreg__Devices(struct soap*, const char *, int, struct zkreg__Devices *const*, const char *);
SOAP_FMAC3 struct zkreg__Devices ** SOAP_FMAC4 soap_in_PointerTozkreg__Devices(struct soap*, const char*, struct zkreg__Devices **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkreg__Devices(struct soap*, struct zkreg__Devices *const*, const char*, const char*);

#ifndef soap_write_PointerTozkreg__Devices
#define soap_write_PointerTozkreg__Devices(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkreg__Devices(soap, data),0) || soap_put_PointerTozkreg__Devices(soap, data, "zkreg:Devices", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Devices ** SOAP_FMAC4 soap_get_PointerTozkreg__Devices(struct soap*, struct zkreg__Devices **, const char*, const char*);

#ifndef soap_read_PointerTozkreg__Devices
#define soap_read_PointerTozkreg__Devices(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkreg__Devices(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkreg__Services
#define SOAP_TYPE_PointerTozkreg__Services (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkreg__Services(struct soap*, struct zkreg__Services *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkreg__Services(struct soap*, const char *, int, struct zkreg__Services *const*, const char *);
SOAP_FMAC3 struct zkreg__Services ** SOAP_FMAC4 soap_in_PointerTozkreg__Services(struct soap*, const char*, struct zkreg__Services **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkreg__Services(struct soap*, struct zkreg__Services *const*, const char*, const char*);

#ifndef soap_write_PointerTozkreg__Services
#define soap_write_PointerTozkreg__Services(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkreg__Services(soap, data),0) || soap_put_PointerTozkreg__Services(soap, data, "zkreg:Services", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Services ** SOAP_FMAC4 soap_get_PointerTozkreg__Services(struct soap*, struct zkreg__Services **, const char*, const char*);

#ifndef soap_read_PointerTozkreg__Services
#define soap_read_PointerTozkreg__Services(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkreg__Services(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkreg__Hosts
#define SOAP_TYPE_PointerTozkreg__Hosts (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkreg__Hosts(struct soap*, struct zkreg__Hosts *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkreg__Hosts(struct soap*, const char *, int, struct zkreg__Hosts *const*, const char *);
SOAP_FMAC3 struct zkreg__Hosts ** SOAP_FMAC4 soap_in_PointerTozkreg__Hosts(struct soap*, const char*, struct zkreg__Hosts **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkreg__Hosts(struct soap*, struct zkreg__Hosts *const*, const char*, const char*);

#ifndef soap_write_PointerTozkreg__Hosts
#define soap_write_PointerTozkreg__Hosts(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkreg__Hosts(soap, data),0) || soap_put_PointerTozkreg__Hosts(soap, data, "zkreg:Hosts", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Hosts ** SOAP_FMAC4 soap_get_PointerTozkreg__Hosts(struct soap*, struct zkreg__Hosts **, const char*, const char*);

#ifndef soap_read_PointerTozkreg__Hosts
#define soap_read_PointerTozkreg__Hosts(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkreg__Hosts(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToint(soap, data),0) || soap_put_PointerToint(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkreg__Logic
#define SOAP_TYPE_PointerTozkreg__Logic (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkreg__Logic(struct soap*, struct zkreg__Logic *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkreg__Logic(struct soap*, const char *, int, struct zkreg__Logic *const*, const char *);
SOAP_FMAC3 struct zkreg__Logic ** SOAP_FMAC4 soap_in_PointerTozkreg__Logic(struct soap*, const char*, struct zkreg__Logic **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkreg__Logic(struct soap*, struct zkreg__Logic *const*, const char*, const char*);

#ifndef soap_write_PointerTozkreg__Logic
#define soap_write_PointerTozkreg__Logic(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkreg__Logic(soap, data),0) || soap_put_PointerTozkreg__Logic(soap, data, "zkreg:Logic", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Logic ** SOAP_FMAC4 soap_get_PointerTozkreg__Logic(struct soap*, struct zkreg__Logic **, const char*, const char*);

#ifndef soap_read_PointerTozkreg__Logic
#define soap_read_PointerTozkreg__Logic(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkreg__Logic(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkreg__Mses
#define SOAP_TYPE_PointerTozkreg__Mses (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkreg__Mses(struct soap*, struct zkreg__Mses *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkreg__Mses(struct soap*, const char *, int, struct zkreg__Mses *const*, const char *);
SOAP_FMAC3 struct zkreg__Mses ** SOAP_FMAC4 soap_in_PointerTozkreg__Mses(struct soap*, const char*, struct zkreg__Mses **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkreg__Mses(struct soap*, struct zkreg__Mses *const*, const char*, const char*);

#ifndef soap_write_PointerTozkreg__Mses
#define soap_write_PointerTozkreg__Mses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkreg__Mses(soap, data),0) || soap_put_PointerTozkreg__Mses(soap, data, "zkreg:Mses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Mses ** SOAP_FMAC4 soap_get_PointerTozkreg__Mses(struct soap*, struct zkreg__Mses **, const char*, const char*);

#ifndef soap_read_PointerTozkreg__Mses
#define soap_read_PointerTozkreg__Mses(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkreg__Mses(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkreg__Device
#define SOAP_TYPE_PointerTozkreg__Device (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkreg__Device(struct soap*, struct zkreg__Device *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkreg__Device(struct soap*, const char *, int, struct zkreg__Device *const*, const char *);
SOAP_FMAC3 struct zkreg__Device ** SOAP_FMAC4 soap_in_PointerTozkreg__Device(struct soap*, const char*, struct zkreg__Device **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkreg__Device(struct soap*, struct zkreg__Device *const*, const char*, const char*);

#ifndef soap_write_PointerTozkreg__Device
#define soap_write_PointerTozkreg__Device(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkreg__Device(soap, data),0) || soap_put_PointerTozkreg__Device(soap, data, "zkreg:Device", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Device ** SOAP_FMAC4 soap_get_PointerTozkreg__Device(struct soap*, struct zkreg__Device **, const char*, const char*);

#ifndef soap_read_PointerTozkreg__Device
#define soap_read_PointerTozkreg__Device(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkreg__Device(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkreg__Service
#define SOAP_TYPE_PointerTozkreg__Service (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkreg__Service(struct soap*, struct zkreg__Service *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkreg__Service(struct soap*, const char *, int, struct zkreg__Service *const*, const char *);
SOAP_FMAC3 struct zkreg__Service ** SOAP_FMAC4 soap_in_PointerTozkreg__Service(struct soap*, const char*, struct zkreg__Service **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkreg__Service(struct soap*, struct zkreg__Service *const*, const char*, const char*);

#ifndef soap_write_PointerTozkreg__Service
#define soap_write_PointerTozkreg__Service(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkreg__Service(soap, data),0) || soap_put_PointerTozkreg__Service(soap, data, "zkreg:Service", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Service ** SOAP_FMAC4 soap_get_PointerTozkreg__Service(struct soap*, struct zkreg__Service **, const char*, const char*);

#ifndef soap_read_PointerTozkreg__Service
#define soap_read_PointerTozkreg__Service(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkreg__Service(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkreg__Urls
#define SOAP_TYPE_PointerTozkreg__Urls (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkreg__Urls(struct soap*, struct zkreg__Urls *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkreg__Urls(struct soap*, const char *, int, struct zkreg__Urls *const*, const char *);
SOAP_FMAC3 struct zkreg__Urls ** SOAP_FMAC4 soap_in_PointerTozkreg__Urls(struct soap*, const char*, struct zkreg__Urls **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkreg__Urls(struct soap*, struct zkreg__Urls *const*, const char*, const char*);

#ifndef soap_write_PointerTozkreg__Urls
#define soap_write_PointerTozkreg__Urls(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkreg__Urls(soap, data),0) || soap_put_PointerTozkreg__Urls(soap, data, "zkreg:Urls", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Urls ** SOAP_FMAC4 soap_get_PointerTozkreg__Urls(struct soap*, struct zkreg__Urls **, const char*, const char*);

#ifndef soap_read_PointerTozkreg__Urls
#define soap_read_PointerTozkreg__Urls(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkreg__Urls(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkreg__Host
#define SOAP_TYPE_PointerTozkreg__Host (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkreg__Host(struct soap*, struct zkreg__Host *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkreg__Host(struct soap*, const char *, int, struct zkreg__Host *const*, const char *);
SOAP_FMAC3 struct zkreg__Host ** SOAP_FMAC4 soap_in_PointerTozkreg__Host(struct soap*, const char*, struct zkreg__Host **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkreg__Host(struct soap*, struct zkreg__Host *const*, const char*, const char*);

#ifndef soap_write_PointerTozkreg__Host
#define soap_write_PointerTozkreg__Host(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkreg__Host(soap, data),0) || soap_put_PointerTozkreg__Host(soap, data, "zkreg:Host", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Host ** SOAP_FMAC4 soap_get_PointerTozkreg__Host(struct soap*, struct zkreg__Host **, const char*, const char*);

#ifndef soap_read_PointerTozkreg__Host
#define soap_read_PointerTozkreg__Host(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkreg__Host(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkreg__Ips
#define SOAP_TYPE_PointerTozkreg__Ips (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkreg__Ips(struct soap*, struct zkreg__Ips *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkreg__Ips(struct soap*, const char *, int, struct zkreg__Ips *const*, const char *);
SOAP_FMAC3 struct zkreg__Ips ** SOAP_FMAC4 soap_in_PointerTozkreg__Ips(struct soap*, const char*, struct zkreg__Ips **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkreg__Ips(struct soap*, struct zkreg__Ips *const*, const char*, const char*);

#ifndef soap_write_PointerTozkreg__Ips
#define soap_write_PointerTozkreg__Ips(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkreg__Ips(soap, data),0) || soap_put_PointerTozkreg__Ips(soap, data, "zkreg:Ips", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Ips ** SOAP_FMAC4 soap_get_PointerTozkreg__Ips(struct soap*, struct zkreg__Ips **, const char*, const char*);

#ifndef soap_read_PointerTozkreg__Ips
#define soap_read_PointerTozkreg__Ips(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkreg__Ips(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkreg__Mse
#define SOAP_TYPE_PointerTozkreg__Mse (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkreg__Mse(struct soap*, struct zkreg__Mse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkreg__Mse(struct soap*, const char *, int, struct zkreg__Mse *const*, const char *);
SOAP_FMAC3 struct zkreg__Mse ** SOAP_FMAC4 soap_in_PointerTozkreg__Mse(struct soap*, const char*, struct zkreg__Mse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkreg__Mse(struct soap*, struct zkreg__Mse *const*, const char*, const char*);

#ifndef soap_write_PointerTozkreg__Mse
#define soap_write_PointerTozkreg__Mse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkreg__Mse(soap, data),0) || soap_put_PointerTozkreg__Mse(soap, data, "zkreg:Mse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkreg__Mse ** SOAP_FMAC4 soap_get_PointerTozkreg__Mse(struct soap*, struct zkreg__Mse **, const char*, const char*);

#ifndef soap_read_PointerTozkreg__Mse
#define soap_read_PointerTozkreg__Mse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkreg__Mse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__anyURI
#define SOAP_TYPE_PointerToxsd__anyURI (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__anyURI(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__anyURI(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerToxsd__anyURI(struct soap*, const char*, char ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__anyURI(struct soap*, char **const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__anyURI
#define soap_write_PointerToxsd__anyURI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__anyURI(soap, data),0) || soap_put_PointerToxsd__anyURI(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerToxsd__anyURI(struct soap*, char ***, const char*, const char*);

#ifndef soap_read_PointerToxsd__anyURI
#define soap_read_PointerToxsd__anyURI(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__anyURI(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__string
#define SOAP_TYPE_PointerToxsd__string (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__string(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__string(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerToxsd__string(struct soap*, const char*, char ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__string(struct soap*, char **const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__string
#define soap_write_PointerToxsd__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__string(soap, data),0) || soap_put_PointerToxsd__string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerToxsd__string(struct soap*, char ***, const char*, const char*);

#ifndef soap_read_PointerToxsd__string
#define soap_read_PointerToxsd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (10)
#endif

#define soap_default_xsd__string(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__string
#define soap_write_xsd__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__string(soap, data),0) || soap_put_xsd__string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__string
#define soap_read_xsd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (9)
#endif

#define soap_default_xsd__integer(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__integer(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__integer(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__integer(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__integer(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__integer
#define soap_write_xsd__integer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__integer(soap, data),0) || soap_put_xsd__integer(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__integer(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__integer
#define soap_read_xsd__integer(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__integer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (8)
#endif

#define soap_default_xsd__anyURI(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anyURI(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__anyURI
#define soap_write_xsd__anyURI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__anyURI(soap, data),0) || soap_put_xsd__anyURI(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__anyURI
#define soap_read_xsd__anyURI(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyURI(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */

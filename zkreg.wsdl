<?xml version="1.0" encoding="UTF-8"?>
<definitions name="Service"
 targetNamespace="http://tempuri.org/zkreg.xsd/Service.wsdl"
 xmlns:tns="http://tempuri.org/zkreg.xsd/Service.wsdl"
 xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
 xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:zkreg="http://tempuri.org/zkreg.xsd"
 xmlns:zkq="http://tempuri.org/zkq.xsd"
 xmlns:SOAP="http://schemas.xmlsoap.org/wsdl/soap/"
 xmlns:HTTP="http://schemas.xmlsoap.org/wsdl/http/"
 xmlns:MIME="http://schemas.xmlsoap.org/wsdl/mime/"
 xmlns:DIME="http://schemas.xmlsoap.org/ws/2002/04/dime/wsdl/"
 xmlns:WSDL="http://schemas.xmlsoap.org/wsdl/"
 xmlns="http://schemas.xmlsoap.org/wsdl/">

<types>

 <schema targetNamespace="http://tempuri.org/zkreg.xsd"
  xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:zkreg="http://tempuri.org/zkreg.xsd"
  xmlns:zkq="http://tempuri.org/zkq.xsd"
  xmlns="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="unqualified"
  attributeFormDefault="unqualified">
  <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
  <simpleType name="Catalog"><!-- zkreg__Catalog -->

   <restriction base="xsd:string">
    <enumeration value="Host"/><!-- zkreg__Catalog::zkreg__Catalog__Host -->
    <!-- = 0 -->
    <enumeration value="Service"/><!-- zkreg__Catalog::zkreg__Catalog__Service -->
    <!-- = 1 -->
    <enumeration value="Device"/><!-- zkreg__Catalog::zkreg__Catalog__Device -->
    <!-- = 2 -->
    <enumeration value="Logic"/><!-- zkreg__Catalog::zkreg__Catalog__Logic -->
    <!-- = 3 -->
   </restriction>
  </simpleType>
  <complexType name="Ips"><!-- zkreg__Ips -->

   <sequence>
    <element name="item" type="xsd:token" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
   </sequence>
  </complexType>
  <complexType name="Urls"><!-- zkreg__Urls -->

   <sequence>
    <element name="item" type="xsd:anyURI" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
   </sequence>
  </complexType>
  <complexType name="Mse"><!-- zkreg__Mse -->

   <sequence>
     <element name="name" type="xsd:token" minOccurs="1" maxOccurs="1" nillable="true"/><!-- zkreg__Mse::name -->
     <element name="catalog" type="zkreg:Catalog" minOccurs="1" maxOccurs="1"/><!-- zkreg__Mse::catalog -->
     <element name="showname" type="xsd:token" minOccurs="0" maxOccurs="1" nillable="true"/><!-- zkreg__Mse::showname -->
   </sequence>
  </complexType>
  <complexType name="Mses"><!-- zkreg__Mses -->

   <sequence>
    <element name="item" type="zkreg:Mse" minOccurs="0" maxOccurs="unbounded" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="Host"><!-- zkreg__Host -->

   <sequence>
     <element name="name" type="xsd:token" minOccurs="1" maxOccurs="1" nillable="true"/><!-- zkreg__Host::name -->
     <element name="catalog" type="zkreg:Catalog" minOccurs="1" maxOccurs="1"/><!-- zkreg__Host::catalog -->
     <element name="ips" type="zkreg:Ips" minOccurs="1" maxOccurs="1" nillable="true"/><!-- zkreg__Host::ips -->
     <element name="showname" type="xsd:token" minOccurs="0" maxOccurs="1" nillable="true"/><!-- zkreg__Host::showname -->
   </sequence>
  </complexType>
  <complexType name="Hosts"><!-- zkreg__Hosts -->

   <sequence>
    <element name="item" type="zkreg:Host" minOccurs="0" maxOccurs="unbounded" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="Service"><!-- zkreg__Service -->

   <sequence>
     <element name="name" type="xsd:token" minOccurs="1" maxOccurs="1" nillable="true"/><!-- zkreg__Service::name -->
     <element name="catalog" type="zkreg:Catalog" minOccurs="1" maxOccurs="1"/><!-- zkreg__Service::catalog -->
     <element name="hostname" type="xsd:token" minOccurs="1" maxOccurs="1" nillable="true"/><!-- zkreg__Service::hostname -->
     <element name="type" type="xsd:token" minOccurs="1" maxOccurs="1" nillable="true"/><!-- zkreg__Service::type -->
     <element name="urls" type="zkreg:Urls" minOccurs="1" maxOccurs="1" nillable="true"/><!-- zkreg__Service::urls -->
     <element name="version" type="xsd:token" minOccurs="0" maxOccurs="1" nillable="true"/><!-- zkreg__Service::version -->
     <element name="showname" type="xsd:token" minOccurs="0" maxOccurs="1" nillable="true"/><!-- zkreg__Service::showname -->
   </sequence>
  </complexType>
  <complexType name="Services"><!-- zkreg__Services -->

   <sequence>
    <element name="item" type="zkreg:Service" minOccurs="0" maxOccurs="unbounded" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="Device"><!-- zkreg__Device -->

   <sequence>
     <element name="name" type="xsd:token" minOccurs="1" maxOccurs="1" nillable="true"/><!-- zkreg__Device::name -->
     <element name="catalog" type="zkreg:Catalog" minOccurs="1" maxOccurs="1"/><!-- zkreg__Device::catalog -->
     <element name="hostname" type="xsd:token" minOccurs="1" maxOccurs="1" nillable="true"/><!-- zkreg__Device::hostname -->
     <element name="type" type="xsd:token" minOccurs="1" maxOccurs="1" nillable="true"/><!-- zkreg__Device::type -->
     <element name="vendor" type="xsd:token" minOccurs="0" maxOccurs="1" nillable="true"/><!-- zkreg__Device::vendor -->
     <element name="model" type="xsd:token" minOccurs="0" maxOccurs="1" nillable="true"/><!-- zkreg__Device::model -->
     <element name="serial" type="xsd:token" minOccurs="0" maxOccurs="1" nillable="true"/><!-- zkreg__Device::serial -->
     <element name="version" type="xsd:token" minOccurs="0" maxOccurs="1" nillable="true"/><!-- zkreg__Device::version -->
     <element name="showname" type="xsd:token" minOccurs="0" maxOccurs="1" nillable="true"/><!-- zkreg__Device::showname -->
   </sequence>
  </complexType>
  <complexType name="Devices"><!-- zkreg__Devices -->

   <sequence>
    <element name="item" type="zkreg:Device" minOccurs="0" maxOccurs="unbounded" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="Logic"><!-- zkreg__Logic -->

   <sequence>
     <element name="name" type="xsd:token" minOccurs="1" maxOccurs="1" nillable="true"/><!-- zkreg__Logic::name -->
     <element name="catalog" type="zkreg:Catalog" minOccurs="1" maxOccurs="1"/><!-- zkreg__Logic::catalog -->
     <element name="parent" type="zkreg:Mse" minOccurs="0" maxOccurs="1" nillable="true"/><!-- zkreg__Logic::parent -->
     <element name="children" type="zkreg:Mses" minOccurs="0" maxOccurs="1" nillable="true"/><!-- zkreg__Logic::children -->
     <element name="showname" type="xsd:token" minOccurs="0" maxOccurs="1" nillable="true"/><!-- zkreg__Logic::showname -->
   </sequence>
  </complexType>
  <complexType name="Logics"><!-- zkreg__Logics -->

   <sequence>
    <element name="item" type="zkreg:Logic" minOccurs="0" maxOccurs="unbounded" nillable="false"/>
   </sequence>
  </complexType>
  <element name="regHostReq" type="zkreg:Host"/>
  <element name="unRegHosttoken" type="xsd:token"/>
  <element name="regServiceReq" type="zkreg:Service"/>
  <element name="unregServicetoken" type="xsd:token"/>
  <element name="regDeviceReq" type="zkreg:Device"/>
  <element name="unregDevcietoken" type="xsd:token"/>
  <element name="heartBeattoken" type="xsd:token"/>
  <element name="setShowNameReq" type="xsd:token"/>
 </schema>

 <schema targetNamespace="http://tempuri.org/zkq.xsd"
  xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:zkreg="http://tempuri.org/zkreg.xsd"
  xmlns:zkq="http://tempuri.org/zkq.xsd"
  xmlns="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="unqualified"
  attributeFormDefault="unqualified">
  <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
  <complexType name="Ips"><!-- zkreg__Ips -->

   <sequence>
    <element name="item" type="xsd:token" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
   </sequence>
  </complexType>
  <complexType name="Urls"><!-- zkreg__Urls -->

   <sequence>
    <element name="item" type="xsd:anyURI" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
   </sequence>
  </complexType>
  <complexType name="Mses"><!-- zkreg__Mses -->

   <sequence>
    <element name="item" type="zkreg:Mse" minOccurs="0" maxOccurs="unbounded" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="Hosts"><!-- zkreg__Hosts -->

   <sequence>
    <element name="item" type="zkreg:Host" minOccurs="0" maxOccurs="unbounded" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="Services"><!-- zkreg__Services -->

   <sequence>
    <element name="item" type="zkreg:Service" minOccurs="0" maxOccurs="unbounded" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="Devices"><!-- zkreg__Devices -->

   <sequence>
    <element name="item" type="zkreg:Device" minOccurs="0" maxOccurs="unbounded" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="Logics"><!-- zkreg__Logics -->

   <sequence>
    <element name="item" type="zkreg:Logic" minOccurs="0" maxOccurs="unbounded" nillable="false"/>
   </sequence>
  </complexType>
  <element name="getAllMsesoffline" type="xsd:boolean"/>
  <element name="getAllHostsoffline" type="xsd:boolean"/>
  <element name="getAllServiceoffline" type="xsd:boolean"/>
  <element name="getAllDevicesoffline" type="xsd:boolean"/>
  <element name="getAllLogicsoffline" type="xsd:boolean"/>
  <element name="getServiceByTypeoffline" type="xsd:boolean"/>
 </schema>

</types>

<message name="regHostRequest">
 <part name="Body" element="zkreg:regHostReq"/><!-- __zkreg__regHost::zkreg__regHostReq -->
</message>

<message name="regHostResponse">
 <part name="Body" element="-zkreg:regHostResponse"/>
</message>

<message name="unregHostRequest">
 <part name="Body" element="zkreg:unRegHosttoken"/><!-- __zkreg__unregHost::zkreg__unRegHosttoken -->
</message>

<message name="unregHostResponse">
 <part name="Body" element="-zkreg:unregHostResponse"/>
</message>

<message name="regServiceRequest">
 <part name="Body" element="zkreg:regServiceReq"/><!-- __zkreg__regService::zkreg__regServiceReq -->
</message>

<message name="regServiceResponse">
 <part name="Body" element="-zkreg:regServiceResponse"/>
</message>

<message name="unregServiceRequest">
 <part name="Body" element="zkreg:unregServicetoken"/><!-- __zkreg__unregService::zkreg__unregServicetoken -->
</message>

<message name="unregServiceResponse">
 <part name="Body" element="-zkreg:unregServiceResponse"/>
</message>

<message name="regDeviceRequest">
 <part name="Body" element="zkreg:regDeviceReq"/><!-- __zkreg__regDevice::zkreg__regDeviceReq -->
</message>

<message name="regDeviceResponse">
 <part name="Body" element="-zkreg:regDeviceResponse"/>
</message>

<message name="unregDeviceRequest">
 <part name="Body" element="zkreg:unregDevcietoken"/><!-- __zkreg__unregDevice::zkreg__unregDevcietoken -->
</message>

<message name="unregDeviceResponse">
 <part name="Body" element="-zkreg:unregDeviceResponse"/>
</message>

<message name="heartBeatRequest">
 <part name="Body" element="zkreg:heartBeattoken"/><!-- __zkreg__heartBeat::zkreg__heartBeattoken -->
</message>

<message name="heartBeatResponse">
 <part name="Body" element="-zkreg:heartBeatResponse"/>
</message>

<message name="setShowNameRequest">
 <part name="Body" element="zkreg:setShowNameReq"/><!-- __zkreg__setShowName::zkreg__setShowNameReq -->
</message>

<message name="setShowNameResponse">
 <part name="Body" element="-zkreg:setShowNameResponse"/>
</message>

<portType name="ServicePortType">
 <operation name="regHost">
  <documentation>Service definition of function __zkreg__regHost</documentation>
  <input message="tns:regHostRequest"/>
  <output message="tns:regHostResponse"/>
 </operation>
 <operation name="unregHost">
  <documentation>Service definition of function __zkreg__unregHost</documentation>
  <input message="tns:unregHostRequest"/>
  <output message="tns:unregHostResponse"/>
 </operation>
 <operation name="regService">
  <documentation>Service definition of function __zkreg__regService</documentation>
  <input message="tns:regServiceRequest"/>
  <output message="tns:regServiceResponse"/>
 </operation>
 <operation name="unregService">
  <documentation>Service definition of function __zkreg__unregService</documentation>
  <input message="tns:unregServiceRequest"/>
  <output message="tns:unregServiceResponse"/>
 </operation>
 <operation name="regDevice">
  <documentation>Service definition of function __zkreg__regDevice</documentation>
  <input message="tns:regDeviceRequest"/>
  <output message="tns:regDeviceResponse"/>
 </operation>
 <operation name="unregDevice">
  <documentation>Service definition of function __zkreg__unregDevice</documentation>
  <input message="tns:unregDeviceRequest"/>
  <output message="tns:unregDeviceResponse"/>
 </operation>
 <operation name="heartBeat">
  <documentation>Service definition of function __zkreg__heartBeat</documentation>
  <input message="tns:heartBeatRequest"/>
  <output message="tns:heartBeatResponse"/>
 </operation>
 <operation name="setShowName">
  <documentation>Service definition of function __zkreg__setShowName</documentation>
  <input message="tns:setShowNameRequest"/>
  <output message="tns:setShowNameResponse"/>
 </operation>
</portType>

<binding name="Service" type="tns:ServicePortType">
 <SOAP:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
 <operation name="regHost">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="unregHost">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="regService">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="unregService">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="regDevice">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="unregDevice">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="heartBeat">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="setShowName">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
</binding>

<service name="Service">
 <documentation>gSOAP 2.8.17r generated service definition</documentation>
 <port name="Service" binding="tns:Service">
  <SOAP:address location="http://localhost:80"/>
 </port>
</service>

</definitions>

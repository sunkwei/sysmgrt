// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
// This source code was auto-generated by Web Services Description Language Utility
//Mono Framework v4.0.30319.17020
//


/// <remarks/>
/// <remarks>
///gSOAP 2.8.17r generated service definition
///</remarks>
[System.Web.Services.WebServiceBinding(Name="zkquery", Namespace="http://www.zonekey.com/sysmgrt/query")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class zkquery : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback getAllMsesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAllHostsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAllServicesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAllDevicesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAllLogicsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getServicesByTypeOperationCompleted;
    
    public zkquery() {
        this.Url = "http://localhost:8899";
    }
    
    public event getAllMsesCompletedEventHandler getAllMsesCompleted;
    
    public event getAllHostsCompletedEventHandler getAllHostsCompleted;
    
    public event getAllServicesCompletedEventHandler getAllServicesCompleted;
    
    public event getAllDevicesCompletedEventHandler getAllDevicesCompleted;
    
    public event getAllLogicsCompletedEventHandler getAllLogicsCompleted;
    
    public event getServicesByTypeCompletedEventHandler getServicesByTypeCompleted;
    
    /// <remarks>
///Service definition of function zkq__getAllMses
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("getAllMsesResponse", Namespace="http://www.zonekey.com/sysmgrt/query", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public MessageGetAllMsesResponse getAllMses([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.zonekey.com/sysmgrt/query", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] MessageGetAllMses getAllMses) {
        object[] results = this.Invoke("getAllMses", new object[] {
                    getAllMses});
        return ((MessageGetAllMsesResponse)(results[0]));
    }
    
    public System.IAsyncResult BegingetAllMses(MessageGetAllMses getAllMses, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllMses", new object[] {
                    getAllMses}, callback, asyncState);
    }
    
    public MessageGetAllMsesResponse EndgetAllMses(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageGetAllMsesResponse)(results[0]));
    }
    
    public void getAllMsesAsync(MessageGetAllMses getAllMses) {
        this.getAllMsesAsync(getAllMses, null);
    }
    
    public void getAllMsesAsync(MessageGetAllMses getAllMses, object userState) {
        if ((this.getAllMsesOperationCompleted == null)) {
            this.getAllMsesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllMsesCompleted);
        }
        this.InvokeAsync("getAllMses", new object[] {
                    getAllMses}, this.getAllMsesOperationCompleted, userState);
    }
    
    private void OngetAllMsesCompleted(object arg) {
        if ((this.getAllMsesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAllMsesCompleted(this, new getAllMsesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Service definition of function zkq__getAllHosts
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("getAllHostsResponse", Namespace="http://www.zonekey.com/sysmgrt/query", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public MessageGetAllHostsResponse getAllHosts([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.zonekey.com/sysmgrt/query", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] MessageGetAllHosts getAllHosts) {
        object[] results = this.Invoke("getAllHosts", new object[] {
                    getAllHosts});
        return ((MessageGetAllHostsResponse)(results[0]));
    }
    
    public System.IAsyncResult BegingetAllHosts(MessageGetAllHosts getAllHosts, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllHosts", new object[] {
                    getAllHosts}, callback, asyncState);
    }
    
    public MessageGetAllHostsResponse EndgetAllHosts(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageGetAllHostsResponse)(results[0]));
    }
    
    public void getAllHostsAsync(MessageGetAllHosts getAllHosts) {
        this.getAllHostsAsync(getAllHosts, null);
    }
    
    public void getAllHostsAsync(MessageGetAllHosts getAllHosts, object userState) {
        if ((this.getAllHostsOperationCompleted == null)) {
            this.getAllHostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllHostsCompleted);
        }
        this.InvokeAsync("getAllHosts", new object[] {
                    getAllHosts}, this.getAllHostsOperationCompleted, userState);
    }
    
    private void OngetAllHostsCompleted(object arg) {
        if ((this.getAllHostsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAllHostsCompleted(this, new getAllHostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Service definition of function zkq__getAllServices
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("getAllServicesResponse", Namespace="http://www.zonekey.com/sysmgrt/query", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public MessageGetAllServicesResponse getAllServices([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.zonekey.com/sysmgrt/query", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] MessageGetAllServices getAllServices) {
        object[] results = this.Invoke("getAllServices", new object[] {
                    getAllServices});
        return ((MessageGetAllServicesResponse)(results[0]));
    }
    
    public System.IAsyncResult BegingetAllServices(MessageGetAllServices getAllServices, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllServices", new object[] {
                    getAllServices}, callback, asyncState);
    }
    
    public MessageGetAllServicesResponse EndgetAllServices(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageGetAllServicesResponse)(results[0]));
    }
    
    public void getAllServicesAsync(MessageGetAllServices getAllServices) {
        this.getAllServicesAsync(getAllServices, null);
    }
    
    public void getAllServicesAsync(MessageGetAllServices getAllServices, object userState) {
        if ((this.getAllServicesOperationCompleted == null)) {
            this.getAllServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllServicesCompleted);
        }
        this.InvokeAsync("getAllServices", new object[] {
                    getAllServices}, this.getAllServicesOperationCompleted, userState);
    }
    
    private void OngetAllServicesCompleted(object arg) {
        if ((this.getAllServicesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAllServicesCompleted(this, new getAllServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Service definition of function zkq__getAllDevices
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("getAllDevicesResponse", Namespace="http://www.zonekey.com/sysmgrt/query", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public MessageGetAllDevicesResponse getAllDevices([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.zonekey.com/sysmgrt/query", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] MessageGetAllDevices getAllDevices) {
        object[] results = this.Invoke("getAllDevices", new object[] {
                    getAllDevices});
        return ((MessageGetAllDevicesResponse)(results[0]));
    }
    
    public System.IAsyncResult BegingetAllDevices(MessageGetAllDevices getAllDevices, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllDevices", new object[] {
                    getAllDevices}, callback, asyncState);
    }
    
    public MessageGetAllDevicesResponse EndgetAllDevices(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageGetAllDevicesResponse)(results[0]));
    }
    
    public void getAllDevicesAsync(MessageGetAllDevices getAllDevices) {
        this.getAllDevicesAsync(getAllDevices, null);
    }
    
    public void getAllDevicesAsync(MessageGetAllDevices getAllDevices, object userState) {
        if ((this.getAllDevicesOperationCompleted == null)) {
            this.getAllDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllDevicesCompleted);
        }
        this.InvokeAsync("getAllDevices", new object[] {
                    getAllDevices}, this.getAllDevicesOperationCompleted, userState);
    }
    
    private void OngetAllDevicesCompleted(object arg) {
        if ((this.getAllDevicesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAllDevicesCompleted(this, new getAllDevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Service definition of function zkq__getAllLogics
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("getAllLogicsResponse", Namespace="http://www.zonekey.com/sysmgrt/query", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public MessageGetAllLogicsResponse getAllLogics([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.zonekey.com/sysmgrt/query", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] MessageGetAllLogics getAllLogics) {
        object[] results = this.Invoke("getAllLogics", new object[] {
                    getAllLogics});
        return ((MessageGetAllLogicsResponse)(results[0]));
    }
    
    public System.IAsyncResult BegingetAllLogics(MessageGetAllLogics getAllLogics, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllLogics", new object[] {
                    getAllLogics}, callback, asyncState);
    }
    
    public MessageGetAllLogicsResponse EndgetAllLogics(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageGetAllLogicsResponse)(results[0]));
    }
    
    public void getAllLogicsAsync(MessageGetAllLogics getAllLogics) {
        this.getAllLogicsAsync(getAllLogics, null);
    }
    
    public void getAllLogicsAsync(MessageGetAllLogics getAllLogics, object userState) {
        if ((this.getAllLogicsOperationCompleted == null)) {
            this.getAllLogicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllLogicsCompleted);
        }
        this.InvokeAsync("getAllLogics", new object[] {
                    getAllLogics}, this.getAllLogicsOperationCompleted, userState);
    }
    
    private void OngetAllLogicsCompleted(object arg) {
        if ((this.getAllLogicsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAllLogicsCompleted(this, new getAllLogicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Service definition of function zkq__getServicesByType
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("getServicesByTypeResponse", Namespace="http://www.zonekey.com/sysmgrt/query", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public MessageGetServicesByTypeResponse getServicesByType([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.zonekey.com/sysmgrt/query", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] MessageGetServicesByType getServicesByType) {
        object[] results = this.Invoke("getServicesByType", new object[] {
                    getServicesByType});
        return ((MessageGetServicesByTypeResponse)(results[0]));
    }
    
    public System.IAsyncResult BegingetServicesByType(MessageGetServicesByType getServicesByType, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getServicesByType", new object[] {
                    getServicesByType}, callback, asyncState);
    }
    
    public MessageGetServicesByTypeResponse EndgetServicesByType(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageGetServicesByTypeResponse)(results[0]));
    }
    
    public void getServicesByTypeAsync(MessageGetServicesByType getServicesByType) {
        this.getServicesByTypeAsync(getServicesByType, null);
    }
    
    public void getServicesByTypeAsync(MessageGetServicesByType getServicesByType, object userState) {
        if ((this.getServicesByTypeOperationCompleted == null)) {
            this.getServicesByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServicesByTypeCompleted);
        }
        this.InvokeAsync("getServicesByType", new object[] {
                    getServicesByType}, this.getServicesByTypeOperationCompleted, userState);
    }
    
    private void OngetServicesByTypeCompleted(object arg) {
        if ((this.getServicesByTypeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getServicesByTypeCompleted(this, new getServicesByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/query")]
[System.Xml.Serialization.XmlRootAttribute("getAllMses", Namespace="http://www.zonekey.com/sysmgrt/query")]
public partial class MessageGetAllMses {
    
    private bool getAllMsesofflineField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool getAllMsesoffline {
        get {
            return this.getAllMsesofflineField;
        }
        set {
            this.getAllMsesofflineField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/query")]
[System.Xml.Serialization.XmlRootAttribute("getAllMsesResponse", Namespace="http://www.zonekey.com/sysmgrt/query")]
public partial class MessageGetAllMsesResponse {
    
    private Mse[] msesField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArray(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItem(ElementName="item", Namespace="http://www.zonekey.com/sysmgrt/register", IsNullable=false)]
    public Mse[] mses {
        get {
            return this.msesField;
        }
        set {
            this.msesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class Mse {
    
    private string nameField;
    
    private Catalog catalogField;
    
    private string shownameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public Catalog catalog {
        get {
            return this.catalogField;
        }
        set {
            this.catalogField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string showname {
        get {
            return this.shownameField;
        }
        set {
            this.shownameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
public enum Catalog {
    
    /// <remarks/>
    Host,
    
    /// <remarks/>
    Service,
    
    /// <remarks/>
    Device,
    
    /// <remarks/>
    Logic,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/query")]
[System.Xml.Serialization.XmlRootAttribute("getAllHosts", Namespace="http://www.zonekey.com/sysmgrt/query")]
public partial class MessageGetAllHosts {
    
    private bool getAllHostsofflineField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool getAllHostsoffline {
        get {
            return this.getAllHostsofflineField;
        }
        set {
            this.getAllHostsofflineField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/query")]
[System.Xml.Serialization.XmlRootAttribute("getAllHostsResponse", Namespace="http://www.zonekey.com/sysmgrt/query")]
public partial class MessageGetAllHostsResponse {
    
    private Host[] hostsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArray(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItem(ElementName="item", Namespace="http://www.zonekey.com/sysmgrt/register", IsNullable=false)]
    public Host[] hosts {
        get {
            return this.hostsField;
        }
        set {
            this.hostsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class Host {
    
    private string nameField1;
    
    private Catalog catalogField1;
    
    private string[] ipsField;
    
    private string shownameField1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string name {
        get {
            return this.nameField1;
        }
        set {
            this.nameField1 = value;
        }
    }
    
    /// <remarks/>
    public Catalog catalog {
        get {
            return this.catalogField1;
        }
        set {
            this.catalogField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArray(IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItem(ElementName="item")]
    public string[] ips {
        get {
            return this.ipsField;
        }
        set {
            this.ipsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string showname {
        get {
            return this.shownameField1;
        }
        set {
            this.shownameField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/query")]
[System.Xml.Serialization.XmlRootAttribute("getAllServices", Namespace="http://www.zonekey.com/sysmgrt/query")]
public partial class MessageGetAllServices {
    
    private bool getAllServiceofflineField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool getAllServiceoffline {
        get {
            return this.getAllServiceofflineField;
        }
        set {
            this.getAllServiceofflineField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/query")]
[System.Xml.Serialization.XmlRootAttribute("getAllServicesResponse", Namespace="http://www.zonekey.com/sysmgrt/query")]
public partial class MessageGetAllServicesResponse {
    
    private Service[] servicesField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArray(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItem(ElementName="item", Namespace="http://www.zonekey.com/sysmgrt/register", IsNullable=false)]
    public Service[] services {
        get {
            return this.servicesField;
        }
        set {
            this.servicesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class Service {
    
    private string nameField2;
    
    private Catalog catalogField2;
    
    private string hostnameField;
    
    private string typeField;
    
    private string[] urlsField;
    
    private string versionField;
    
    private string shownameField2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string name {
        get {
            return this.nameField2;
        }
        set {
            this.nameField2 = value;
        }
    }
    
    /// <remarks/>
    public Catalog catalog {
        get {
            return this.catalogField2;
        }
        set {
            this.catalogField2 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string hostname {
        get {
            return this.hostnameField;
        }
        set {
            this.hostnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArray(IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItem(ElementName="item")]
    public string[] urls {
        get {
            return this.urlsField;
        }
        set {
            this.urlsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string showname {
        get {
            return this.shownameField2;
        }
        set {
            this.shownameField2 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/query")]
[System.Xml.Serialization.XmlRootAttribute("getAllDevices", Namespace="http://www.zonekey.com/sysmgrt/query")]
public partial class MessageGetAllDevices {
    
    private bool getAllDevicesofflineField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool getAllDevicesoffline {
        get {
            return this.getAllDevicesofflineField;
        }
        set {
            this.getAllDevicesofflineField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/query")]
[System.Xml.Serialization.XmlRootAttribute("getAllDevicesResponse", Namespace="http://www.zonekey.com/sysmgrt/query")]
public partial class MessageGetAllDevicesResponse {
    
    private Device[] devicesField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArray(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItem(ElementName="item", Namespace="http://www.zonekey.com/sysmgrt/register", IsNullable=false)]
    public Device[] devices {
        get {
            return this.devicesField;
        }
        set {
            this.devicesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class Device {
    
    private string nameField3;
    
    private Catalog catalogField3;
    
    private string hostnameField1;
    
    private string typeField1;
    
    private string vendorField;
    
    private string modelField;
    
    private string serialField;
    
    private string versionField1;
    
    private string shownameField3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string name {
        get {
            return this.nameField3;
        }
        set {
            this.nameField3 = value;
        }
    }
    
    /// <remarks/>
    public Catalog catalog {
        get {
            return this.catalogField3;
        }
        set {
            this.catalogField3 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string hostname {
        get {
            return this.hostnameField1;
        }
        set {
            this.hostnameField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string type {
        get {
            return this.typeField1;
        }
        set {
            this.typeField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string vendor {
        get {
            return this.vendorField;
        }
        set {
            this.vendorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string model {
        get {
            return this.modelField;
        }
        set {
            this.modelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string serial {
        get {
            return this.serialField;
        }
        set {
            this.serialField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string version {
        get {
            return this.versionField1;
        }
        set {
            this.versionField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string showname {
        get {
            return this.shownameField3;
        }
        set {
            this.shownameField3 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/query")]
[System.Xml.Serialization.XmlRootAttribute("getAllLogics", Namespace="http://www.zonekey.com/sysmgrt/query")]
public partial class MessageGetAllLogics {
    
    private bool getAllLogicsofflineField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool getAllLogicsoffline {
        get {
            return this.getAllLogicsofflineField;
        }
        set {
            this.getAllLogicsofflineField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/query")]
[System.Xml.Serialization.XmlRootAttribute("getAllLogicsResponse", Namespace="http://www.zonekey.com/sysmgrt/query")]
public partial class MessageGetAllLogicsResponse {
    
    private Logic[] logicsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArray(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItem(ElementName="item", Namespace="http://www.zonekey.com/sysmgrt/register", IsNullable=false)]
    public Logic[] logics {
        get {
            return this.logicsField;
        }
        set {
            this.logicsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class Logic {
    
    private string nameField4;
    
    private Catalog catalogField4;
    
    private Mse parentField;
    
    private Mse[] childrenField;
    
    private string shownameField4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string name {
        get {
            return this.nameField4;
        }
        set {
            this.nameField4 = value;
        }
    }
    
    /// <remarks/>
    public Catalog catalog {
        get {
            return this.catalogField4;
        }
        set {
            this.catalogField4 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public Mse parent {
        get {
            return this.parentField;
        }
        set {
            this.parentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArray(IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItem(ElementName="item", IsNullable=false)]
    public Mse[] children {
        get {
            return this.childrenField;
        }
        set {
            this.childrenField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string showname {
        get {
            return this.shownameField4;
        }
        set {
            this.shownameField4 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/query")]
[System.Xml.Serialization.XmlRootAttribute("getServicesByType", Namespace="http://www.zonekey.com/sysmgrt/query")]
public partial class MessageGetServicesByType {
    
    private bool getServiceByTypeofflineField;
    
    private string typeField2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool getServiceByTypeoffline {
        get {
            return this.getServiceByTypeofflineField;
        }
        set {
            this.getServiceByTypeofflineField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string type {
        get {
            return this.typeField2;
        }
        set {
            this.typeField2 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/query")]
[System.Xml.Serialization.XmlRootAttribute("getServicesByTypeResponse", Namespace="http://www.zonekey.com/sysmgrt/query")]
public partial class MessageGetServicesByTypeResponse {
    
    private Service[] servicesField1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArray(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItem(ElementName="item", Namespace="http://www.zonekey.com/sysmgrt/register", IsNullable=false)]
    public Service[] services {
        get {
            return this.servicesField1;
        }
        set {
            this.servicesField1 = value;
        }
    }
}

public partial class getAllMsesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAllMsesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageGetAllMsesResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageGetAllMsesResponse)(this.results[0]));
        }
    }
}

public delegate void getAllMsesCompletedEventHandler(object sender, getAllMsesCompletedEventArgs args);

public partial class getAllHostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAllHostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageGetAllHostsResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageGetAllHostsResponse)(this.results[0]));
        }
    }
}

public delegate void getAllHostsCompletedEventHandler(object sender, getAllHostsCompletedEventArgs args);

public partial class getAllServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAllServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageGetAllServicesResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageGetAllServicesResponse)(this.results[0]));
        }
    }
}

public delegate void getAllServicesCompletedEventHandler(object sender, getAllServicesCompletedEventArgs args);

public partial class getAllDevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAllDevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageGetAllDevicesResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageGetAllDevicesResponse)(this.results[0]));
        }
    }
}

public delegate void getAllDevicesCompletedEventHandler(object sender, getAllDevicesCompletedEventArgs args);

public partial class getAllLogicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAllLogicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageGetAllLogicsResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageGetAllLogicsResponse)(this.results[0]));
        }
    }
}

public delegate void getAllLogicsCompletedEventHandler(object sender, getAllLogicsCompletedEventArgs args);

public partial class getServicesByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getServicesByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageGetServicesByTypeResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageGetServicesByTypeResponse)(this.results[0]));
        }
    }
}

public delegate void getServicesByTypeCompletedEventHandler(object sender, getServicesByTypeCompletedEventArgs args);

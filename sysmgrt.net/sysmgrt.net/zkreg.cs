// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
// This source code was auto-generated by Web Services Description Language Utility
//Mono Framework v4.0.30319.17020
//


/// <remarks/>
/// <remarks>
///gSOAP 2.8.17r generated service definition
///</remarks>
[System.Web.Services.WebServiceBinding(Name="zkreg", Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class zkreg : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback regHostOperationCompleted;
    
    private System.Threading.SendOrPostCallback unregHostOperationCompleted;
    
    private System.Threading.SendOrPostCallback regServiceOperationCompleted;
    
    private System.Threading.SendOrPostCallback unregServiceOperationCompleted;
    
    private System.Threading.SendOrPostCallback regDeviceOperationCompleted;
    
    private System.Threading.SendOrPostCallback unregDeviceOperationCompleted;
    
    private System.Threading.SendOrPostCallback heartBeatOperationCompleted;
    
    private System.Threading.SendOrPostCallback setShowNameOperationCompleted;
    
    public zkreg() {
        this.Url = "http://localhost:8899";
    }
    
    public event regHostCompletedEventHandler regHostCompleted;
    
    public event unregHostCompletedEventHandler unregHostCompleted;
    
    public event regServiceCompletedEventHandler regServiceCompleted;
    
    public event unregServiceCompletedEventHandler unregServiceCompleted;
    
    public event regDeviceCompletedEventHandler regDeviceCompleted;
    
    public event unregDeviceCompletedEventHandler unregDeviceCompleted;
    
    public event heartBeatCompletedEventHandler heartBeatCompleted;
    
    public event setShowNameCompletedEventHandler setShowNameCompleted;
    
    /// <remarks>
///Service definition of function zkreg__regHost
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("regHostResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
    public MessageRegHostResponse regHost([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")] MessageRegHost regHost) {
        object[] results = this.Invoke("regHost", new object[] {
                    regHost});
        return ((MessageRegHostResponse)(results[0]));
    }
    
    public System.IAsyncResult BeginregHost(MessageRegHost regHost, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("regHost", new object[] {
                    regHost}, callback, asyncState);
    }
    
    public MessageRegHostResponse EndregHost(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageRegHostResponse)(results[0]));
    }
    
    public void regHostAsync(MessageRegHost regHost) {
        this.regHostAsync(regHost, null);
    }
    
    public void regHostAsync(MessageRegHost regHost, object userState) {
        if ((this.regHostOperationCompleted == null)) {
            this.regHostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregHostCompleted);
        }
        this.InvokeAsync("regHost", new object[] {
                    regHost}, this.regHostOperationCompleted, userState);
    }
    
    private void OnregHostCompleted(object arg) {
        if ((this.regHostCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.regHostCompleted(this, new regHostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Service definition of function zkreg__unregHost
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("unregHostResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
    public MessageUnregHostResponse unregHost([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")] MessageUnregHost unregHost) {
        object[] results = this.Invoke("unregHost", new object[] {
                    unregHost});
        return ((MessageUnregHostResponse)(results[0]));
    }
    
    public System.IAsyncResult BeginunregHost(MessageUnregHost unregHost, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("unregHost", new object[] {
                    unregHost}, callback, asyncState);
    }
    
    public MessageUnregHostResponse EndunregHost(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageUnregHostResponse)(results[0]));
    }
    
    public void unregHostAsync(MessageUnregHost unregHost) {
        this.unregHostAsync(unregHost, null);
    }
    
    public void unregHostAsync(MessageUnregHost unregHost, object userState) {
        if ((this.unregHostOperationCompleted == null)) {
            this.unregHostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunregHostCompleted);
        }
        this.InvokeAsync("unregHost", new object[] {
                    unregHost}, this.unregHostOperationCompleted, userState);
    }
    
    private void OnunregHostCompleted(object arg) {
        if ((this.unregHostCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.unregHostCompleted(this, new unregHostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Service definition of function zkreg__regService
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("regServiceResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
    public MessageRegServiceResponse regService([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")] MessageRegService regService) {
        object[] results = this.Invoke("regService", new object[] {
                    regService});
        return ((MessageRegServiceResponse)(results[0]));
    }
    
    public System.IAsyncResult BeginregService(MessageRegService regService, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("regService", new object[] {
                    regService}, callback, asyncState);
    }
    
    public MessageRegServiceResponse EndregService(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageRegServiceResponse)(results[0]));
    }
    
    public void regServiceAsync(MessageRegService regService) {
        this.regServiceAsync(regService, null);
    }
    
    public void regServiceAsync(MessageRegService regService, object userState) {
        if ((this.regServiceOperationCompleted == null)) {
            this.regServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregServiceCompleted);
        }
        this.InvokeAsync("regService", new object[] {
                    regService}, this.regServiceOperationCompleted, userState);
    }
    
    private void OnregServiceCompleted(object arg) {
        if ((this.regServiceCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.regServiceCompleted(this, new regServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Service definition of function zkreg__unregService
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("unregServiceResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
    public MessageUnregServiceResponse unregService([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")] MessageUnregService unregService) {
        object[] results = this.Invoke("unregService", new object[] {
                    unregService});
        return ((MessageUnregServiceResponse)(results[0]));
    }
    
    public System.IAsyncResult BeginunregService(MessageUnregService unregService, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("unregService", new object[] {
                    unregService}, callback, asyncState);
    }
    
    public MessageUnregServiceResponse EndunregService(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageUnregServiceResponse)(results[0]));
    }
    
    public void unregServiceAsync(MessageUnregService unregService) {
        this.unregServiceAsync(unregService, null);
    }
    
    public void unregServiceAsync(MessageUnregService unregService, object userState) {
        if ((this.unregServiceOperationCompleted == null)) {
            this.unregServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunregServiceCompleted);
        }
        this.InvokeAsync("unregService", new object[] {
                    unregService}, this.unregServiceOperationCompleted, userState);
    }
    
    private void OnunregServiceCompleted(object arg) {
        if ((this.unregServiceCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.unregServiceCompleted(this, new unregServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Service definition of function zkreg__regDevice
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("regDeviceResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
    public MessageRegDeviceResponse regDevice([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")] MessageRegDevice regDevice) {
        object[] results = this.Invoke("regDevice", new object[] {
                    regDevice});
        return ((MessageRegDeviceResponse)(results[0]));
    }
    
    public System.IAsyncResult BeginregDevice(MessageRegDevice regDevice, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("regDevice", new object[] {
                    regDevice}, callback, asyncState);
    }
    
    public MessageRegDeviceResponse EndregDevice(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageRegDeviceResponse)(results[0]));
    }
    
    public void regDeviceAsync(MessageRegDevice regDevice) {
        this.regDeviceAsync(regDevice, null);
    }
    
    public void regDeviceAsync(MessageRegDevice regDevice, object userState) {
        if ((this.regDeviceOperationCompleted == null)) {
            this.regDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregDeviceCompleted);
        }
        this.InvokeAsync("regDevice", new object[] {
                    regDevice}, this.regDeviceOperationCompleted, userState);
    }
    
    private void OnregDeviceCompleted(object arg) {
        if ((this.regDeviceCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.regDeviceCompleted(this, new regDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Service definition of function zkreg__unregDevice
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("unregDeviceResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
    public MessageUnregDeviceResponse unregDevice([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")] MessageUnregDevice unregDevice) {
        object[] results = this.Invoke("unregDevice", new object[] {
                    unregDevice});
        return ((MessageUnregDeviceResponse)(results[0]));
    }
    
    public System.IAsyncResult BeginunregDevice(MessageUnregDevice unregDevice, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("unregDevice", new object[] {
                    unregDevice}, callback, asyncState);
    }
    
    public MessageUnregDeviceResponse EndunregDevice(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageUnregDeviceResponse)(results[0]));
    }
    
    public void unregDeviceAsync(MessageUnregDevice unregDevice) {
        this.unregDeviceAsync(unregDevice, null);
    }
    
    public void unregDeviceAsync(MessageUnregDevice unregDevice, object userState) {
        if ((this.unregDeviceOperationCompleted == null)) {
            this.unregDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunregDeviceCompleted);
        }
        this.InvokeAsync("unregDevice", new object[] {
                    unregDevice}, this.unregDeviceOperationCompleted, userState);
    }
    
    private void OnunregDeviceCompleted(object arg) {
        if ((this.unregDeviceCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.unregDeviceCompleted(this, new unregDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Service definition of function zkreg__heartBeat
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("heartBeatResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
    public MessageHeartBeatResponse heartBeat([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")] MessageHeartBeat heartBeat) {
        object[] results = this.Invoke("heartBeat", new object[] {
                    heartBeat});
        return ((MessageHeartBeatResponse)(results[0]));
    }
    
    public System.IAsyncResult BeginheartBeat(MessageHeartBeat heartBeat, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("heartBeat", new object[] {
                    heartBeat}, callback, asyncState);
    }
    
    public MessageHeartBeatResponse EndheartBeat(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageHeartBeatResponse)(results[0]));
    }
    
    public void heartBeatAsync(MessageHeartBeat heartBeat) {
        this.heartBeatAsync(heartBeat, null);
    }
    
    public void heartBeatAsync(MessageHeartBeat heartBeat, object userState) {
        if ((this.heartBeatOperationCompleted == null)) {
            this.heartBeatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnheartBeatCompleted);
        }
        this.InvokeAsync("heartBeat", new object[] {
                    heartBeat}, this.heartBeatOperationCompleted, userState);
    }
    
    private void OnheartBeatCompleted(object arg) {
        if ((this.heartBeatCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.heartBeatCompleted(this, new heartBeatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Service definition of function zkreg__setShowName
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("setShowNameResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
    public MessageSetShowNameResponse setShowName([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")] MessageSetShowName setShowName) {
        object[] results = this.Invoke("setShowName", new object[] {
                    setShowName});
        return ((MessageSetShowNameResponse)(results[0]));
    }
    
    public System.IAsyncResult BeginsetShowName(MessageSetShowName setShowName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setShowName", new object[] {
                    setShowName}, callback, asyncState);
    }
    
    public MessageSetShowNameResponse EndsetShowName(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageSetShowNameResponse)(results[0]));
    }
    
    public void setShowNameAsync(MessageSetShowName setShowName) {
        this.setShowNameAsync(setShowName, null);
    }
    
    public void setShowNameAsync(MessageSetShowName setShowName, object userState) {
        if ((this.setShowNameOperationCompleted == null)) {
            this.setShowNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetShowNameCompleted);
        }
        this.InvokeAsync("setShowName", new object[] {
                    setShowName}, this.setShowNameOperationCompleted, userState);
    }
    
    private void OnsetShowNameCompleted(object arg) {
        if ((this.setShowNameCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setShowNameCompleted(this, new setShowNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("regHost", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageRegHost {
    
    private Host regHostReqField;
    
    /// <remarks/>
    public Host regHostReq {
        get {
            return this.regHostReqField;
        }
        set {
            this.regHostReqField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("regHostReq", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class Host {
    
    private string nameField;
    
    private Catalog catalogField;
    
    private string[] ipsField;
    
    private string shownameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public Catalog catalog {
        get {
            return this.catalogField;
        }
        set {
            this.catalogField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArray(IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItem(ElementName="item")]
    public string[] ips {
        get {
            return this.ipsField;
        }
        set {
            this.ipsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string showname {
        get {
            return this.shownameField;
        }
        set {
            this.shownameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
public enum Catalog {
    
    /// <remarks/>
    Host,
    
    /// <remarks/>
    Service,
    
    /// <remarks/>
    Device,
    
    /// <remarks/>
    Logic,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("regHostResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageRegHostResponse {
    
    private string tokenField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string token {
        get {
            return this.tokenField;
        }
        set {
            this.tokenField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("unregHost", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageUnregHost {
    
    private string unRegHoststringField;
    
    /// <remarks/>
    public string unRegHoststring {
        get {
            return this.unRegHoststringField;
        }
        set {
            this.unRegHoststringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("unregHostResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageUnregHostResponse {
    
    private System.Nullable<int> codeField;
    
    private bool codeSpecifiedField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
    public System.Nullable<int> code {
        get {
            return this.codeField;
        }
        set {
            this.codeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool codeSpecified {
        get {
            return this.codeSpecifiedField;
        }
        set {
            this.codeSpecifiedField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("regService", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageRegService {
    
    private Service regServiceReqField;
    
    /// <remarks/>
    public Service regServiceReq {
        get {
            return this.regServiceReqField;
        }
        set {
            this.regServiceReqField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("regServiceReq", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class Service {
    
    private string nameField1;
    
    private Catalog catalogField1;
    
    private string hostnameField;
    
    private string typeField;
    
    private string[] urlsField;
    
    private string versionField;
    
    private string shownameField1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string name {
        get {
            return this.nameField1;
        }
        set {
            this.nameField1 = value;
        }
    }
    
    /// <remarks/>
    public Catalog catalog {
        get {
            return this.catalogField1;
        }
        set {
            this.catalogField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string hostname {
        get {
            return this.hostnameField;
        }
        set {
            this.hostnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArray(IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItem(ElementName="item")]
    public string[] urls {
        get {
            return this.urlsField;
        }
        set {
            this.urlsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string showname {
        get {
            return this.shownameField1;
        }
        set {
            this.shownameField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("regServiceResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageRegServiceResponse {
    
    private string tokenField1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string token {
        get {
            return this.tokenField1;
        }
        set {
            this.tokenField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("unregService", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageUnregService {
    
    private string unregServicestringField;
    
    /// <remarks/>
    public string unregServicestring {
        get {
            return this.unregServicestringField;
        }
        set {
            this.unregServicestringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("unregServiceResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageUnregServiceResponse {
    
    private System.Nullable<int> codeField1;
    
    private bool codeSpecifiedField1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
    public System.Nullable<int> code {
        get {
            return this.codeField1;
        }
        set {
            this.codeField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool codeSpecified {
        get {
            return this.codeSpecifiedField1;
        }
        set {
            this.codeSpecifiedField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("regDevice", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageRegDevice {
    
    private Device regDeviceReqField;
    
    /// <remarks/>
    public Device regDeviceReq {
        get {
            return this.regDeviceReqField;
        }
        set {
            this.regDeviceReqField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("regDeviceReq", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class Device {
    
    private string nameField2;
    
    private Catalog catalogField2;
    
    private string hostnameField1;
    
    private string typeField1;
    
    private string vendorField;
    
    private string modelField;
    
    private string serialField;
    
    private string versionField1;
    
    private string shownameField2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string name {
        get {
            return this.nameField2;
        }
        set {
            this.nameField2 = value;
        }
    }
    
    /// <remarks/>
    public Catalog catalog {
        get {
            return this.catalogField2;
        }
        set {
            this.catalogField2 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string hostname {
        get {
            return this.hostnameField1;
        }
        set {
            this.hostnameField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string type {
        get {
            return this.typeField1;
        }
        set {
            this.typeField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string vendor {
        get {
            return this.vendorField;
        }
        set {
            this.vendorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string model {
        get {
            return this.modelField;
        }
        set {
            this.modelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string serial {
        get {
            return this.serialField;
        }
        set {
            this.serialField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string version {
        get {
            return this.versionField1;
        }
        set {
            this.versionField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string showname {
        get {
            return this.shownameField2;
        }
        set {
            this.shownameField2 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("regDeviceResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageRegDeviceResponse {
    
    private string tokenField2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string token {
        get {
            return this.tokenField2;
        }
        set {
            this.tokenField2 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("unregDevice", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageUnregDevice {
    
    private string unregDevciestringField;
    
    /// <remarks/>
    public string unregDevciestring {
        get {
            return this.unregDevciestringField;
        }
        set {
            this.unregDevciestringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("unregDeviceResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageUnregDeviceResponse {
    
    private System.Nullable<int> codeField2;
    
    private bool codeSpecifiedField2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
    public System.Nullable<int> code {
        get {
            return this.codeField2;
        }
        set {
            this.codeField2 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool codeSpecified {
        get {
            return this.codeSpecifiedField2;
        }
        set {
            this.codeSpecifiedField2 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("heartBeat", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageHeartBeat {
    
    private string heartBeatstringField;
    
    /// <remarks/>
    public string heartBeatstring {
        get {
            return this.heartBeatstringField;
        }
        set {
            this.heartBeatstringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("heartBeatResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageHeartBeatResponse {
    
    private System.Nullable<int> codeField3;
    
    private bool codeSpecifiedField3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
    public System.Nullable<int> code {
        get {
            return this.codeField3;
        }
        set {
            this.codeField3 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool codeSpecified {
        get {
            return this.codeSpecifiedField3;
        }
        set {
            this.codeSpecifiedField3 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("setShowName", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageSetShowName {
    
    private string setShowNameReqField;
    
    private string shownameField3;
    
    /// <remarks/>
    public string setShowNameReq {
        get {
            return this.setShowNameReqField;
        }
        set {
            this.setShowNameReqField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string showname {
        get {
            return this.shownameField3;
        }
        set {
            this.shownameField3 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zonekey.com/sysmgrt/register")]
[System.Xml.Serialization.XmlRootAttribute("setShowNameResponse", Namespace="http://www.zonekey.com/sysmgrt/register")]
public partial class MessageSetShowNameResponse {
    
    private System.Nullable<int> codeField4;
    
    private bool codeSpecifiedField4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
    public System.Nullable<int> code {
        get {
            return this.codeField4;
        }
        set {
            this.codeField4 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool codeSpecified {
        get {
            return this.codeSpecifiedField4;
        }
        set {
            this.codeSpecifiedField4 = value;
        }
    }
}

public partial class regHostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal regHostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageRegHostResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageRegHostResponse)(this.results[0]));
        }
    }
}

public delegate void regHostCompletedEventHandler(object sender, regHostCompletedEventArgs args);

public partial class unregHostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal unregHostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageUnregHostResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageUnregHostResponse)(this.results[0]));
        }
    }
}

public delegate void unregHostCompletedEventHandler(object sender, unregHostCompletedEventArgs args);

public partial class regServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal regServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageRegServiceResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageRegServiceResponse)(this.results[0]));
        }
    }
}

public delegate void regServiceCompletedEventHandler(object sender, regServiceCompletedEventArgs args);

public partial class unregServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal unregServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageUnregServiceResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageUnregServiceResponse)(this.results[0]));
        }
    }
}

public delegate void unregServiceCompletedEventHandler(object sender, unregServiceCompletedEventArgs args);

public partial class regDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal regDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageRegDeviceResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageRegDeviceResponse)(this.results[0]));
        }
    }
}

public delegate void regDeviceCompletedEventHandler(object sender, regDeviceCompletedEventArgs args);

public partial class unregDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal unregDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageUnregDeviceResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageUnregDeviceResponse)(this.results[0]));
        }
    }
}

public delegate void unregDeviceCompletedEventHandler(object sender, unregDeviceCompletedEventArgs args);

public partial class heartBeatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal heartBeatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageHeartBeatResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageHeartBeatResponse)(this.results[0]));
        }
    }
}

public delegate void heartBeatCompletedEventHandler(object sender, heartBeatCompletedEventArgs args);

public partial class setShowNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal setShowNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageSetShowNameResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageSetShowNameResponse)(this.results[0]));
        }
    }
}

public delegate void setShowNameCompletedEventHandler(object sender, setShowNameCompletedEventArgs args);
